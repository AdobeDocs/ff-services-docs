{"version":3,"file":"component---src-pages-photoshop-quickstart-index-md-dcd13be30948d2c34596.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/photoshop/quickstart/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ff-services-docs/ff-services-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart-guide\"\n    }}>{`Quickstart Guide`}</h1>\n    <p>{`Create your first Mask with Photoshop APIs`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><span parentName=\"td\" {...{\n              \"className\": \"gatsby-resp-image-wrapper\",\n              \"style\": {\n                \"position\": \"relative\",\n                \"display\": \"block\",\n                \"marginLeft\": \"auto\",\n                \"marginRight\": \"auto\",\n                \"maxWidth\": \"1280px\"\n              }\n            }}>{`\n      `}<span parentName=\"span\" {...{\n                \"className\": \"gatsby-resp-image-background-image\",\n                \"style\": {\n                  \"paddingBottom\": \"66.5625%\",\n                  \"position\": \"relative\",\n                  \"bottom\": \"0\",\n                  \"left\": \"0\",\n                  \"display\": \"block\",\n                  \"transition\": \"opacity 0.5s 0.5s\",\n                  \"pointerEvents\": \"none\"\n                }\n              }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/5530d/masking-original.webp 320w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/0c8fb/masking-original.webp 640w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/94b1e/masking-original.webp 1280w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/0b34d/masking-original.webp 1920w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/d5269/masking-original.webp 2560w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/95cb8/masking-original.webp 4256w\"],\n                  \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n                  \"type\": \"image/webp\"\n                }}></source>{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/8980b/masking-original.jpg 320w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/56d4e/masking-original.jpg 640w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/62aaf/masking-original.jpg 1280w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/aaf92/masking-original.jpg 1920w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/36eba/masking-original.jpg 2560w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/28c97/masking-original.jpg 4256w\"],\n                  \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n                  \"type\": \"image/jpeg\"\n                }}></source>{`\n          `}<img parentName=\"picture\" {...{\n                  \"className\": \"gatsby-resp-image-image\",\n                  \"src\": \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/62aaf/masking-original.jpg\",\n                  \"alt\": \"a picture of a person golfing with a green scenic background\",\n                  \"title\": \"a picture of a person golfing with a green scenic background\",\n                  \"loading\": \"lazy\",\n                  \"style\": {\n                    \"width\": \"100%\",\n                    \"height\": \"100%\",\n                    \"margin\": \"0\",\n                    \"verticalAlign\": \"middle\",\n                    \"position\": \"absolute\",\n                    \"opacity\": \"0\",\n                    \"transition\": \"opacity 0.5s\",\n                    \"color\": \"inherit\",\n                    \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                    \"top\": \"0\",\n                    \"left\": \"0\"\n                  }\n                }}></img>{`\n        `}</picture>{`\n    `}</span>{` `}<p style={{\n              \"textAlign\": \"center\"\n            }}>{`Image`}</p></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><span parentName=\"td\" {...{\n              \"className\": \"gatsby-resp-image-wrapper\",\n              \"style\": {\n                \"position\": \"relative\",\n                \"display\": \"block\",\n                \"marginLeft\": \"auto\",\n                \"marginRight\": \"auto\",\n                \"maxWidth\": \"1280px\"\n              }\n            }}>{`\n      `}<span parentName=\"span\" {...{\n                \"className\": \"gatsby-resp-image-background-image\",\n                \"style\": {\n                  \"paddingBottom\": \"66.5625%\",\n                  \"position\": \"relative\",\n                  \"bottom\": \"0\",\n                  \"left\": \"0\",\n                  \"display\": \"block\",\n                  \"transition\": \"opacity 0.5s 0.5s\",\n                  \"pointerEvents\": \"none\"\n                }\n              }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/5530d/masking-output.webp 320w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/0c8fb/masking-output.webp 640w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/94b1e/masking-output.webp 1280w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/0b34d/masking-output.webp 1920w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/d5269/masking-output.webp 2560w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/95cb8/masking-output.webp 4256w\"],\n                  \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n                  \"type\": \"image/webp\"\n                }}></source>{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/dd4a7/masking-output.png 320w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/0f09e/masking-output.png 640w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/bbbf7/masking-output.png 1280w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/ac7a9/masking-output.png 1920w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/c7a69/masking-output.png 2560w\", \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/00d7d/masking-output.png 4256w\"],\n                  \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n                  \"type\": \"image/png\"\n                }}></source>{`\n          `}<img parentName=\"picture\" {...{\n                  \"className\": \"gatsby-resp-image-image\",\n                  \"src\": \"/ff-services-docs/static/c91d855ebbab710f1b577f498ad72fd6/bbbf7/masking-output.png\",\n                  \"alt\": \"a mask of a person golfing with a black background\",\n                  \"title\": \"a mask of a person golfing with a black background\",\n                  \"loading\": \"lazy\",\n                  \"style\": {\n                    \"width\": \"100%\",\n                    \"height\": \"100%\",\n                    \"margin\": \"0\",\n                    \"verticalAlign\": \"middle\",\n                    \"position\": \"absolute\",\n                    \"opacity\": \"0\",\n                    \"transition\": \"opacity 0.5s\",\n                    \"color\": \"inherit\",\n                    \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                    \"top\": \"0\",\n                    \"left\": \"0\"\n                  }\n                }}></img>{`\n        `}</picture>{`\n    `}</span>{` `}<p style={{\n              \"textAlign\": \"center\"\n            }}>{`Image Mask`}</p></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <h3 {...{\n      \"id\": \"credentials\"\n    }}>{`Credentials`}</h3>\n    <p>{`If you don't already have a Photoshop or Firefly Services `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{`, retrieve them from your `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview\"\n      }}>{`Adobe Developer Console project`}</a>{` before reading further. `}<strong parentName=\"p\">{`Securely store these credentials and never expose them in client-side or public code.`}</strong></p>\n    <h3 {...{\n      \"id\": \"set-up-your-environment\"\n    }}>{`Set Up Your Environment`}</h3>\n    <p>{`Before we begin this tutorial, run the following in a secure terminal:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir photoshop-api-create-mask-tutorial\ncd photoshop-api-create-mask-tutorial\nnpm init --y\nnpm install axios qs\ntouch index.js\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir photoshop-api-create-mask-tutorial\ncd photoshop-api-create-mask-tutorial\npython -m pip install requests\ntouch main.py\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"pre-signed-urls\"\n    }}>{`Pre-signed URLs`}</h3>\n    <p>{`To interact with Adobe's Photoshop APIs, you'll need to generate pre-signed URLs. These URLs grant temporary access to your storage resources without exposing your credentials. For more details about pre-signed URLs, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html\"\n      }}>{`AWS Sharing objects with presigned URLs`}</a>{`, or `}<a parentName=\"p\" {...{\n        \"href\": \"https://learn.microsoft.com/en-us/azure/storage/common/storage-sas-overview\"\n      }}>{`Azure Storage resources using shared access signatures`}</a>{`.`}</p>\n    <p>{`In this tutorial, you will need:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A pre-signed URL with a read token for the input image. Save this sample image to your cloud storage and generate a pre-signed URL: `}<span parentName=\"li\" {...{\n          \"className\": \"gatsby-resp-image-wrapper\",\n          \"style\": {\n            \"position\": \"relative\",\n            \"display\": \"block\",\n            \"marginLeft\": \"auto\",\n            \"marginRight\": \"auto\",\n            \"maxWidth\": \"1280px\"\n          }\n        }}>{`\n      `}<span parentName=\"span\" {...{\n            \"className\": \"gatsby-resp-image-background-image\",\n            \"style\": {\n              \"paddingBottom\": \"66.5625%\",\n              \"position\": \"relative\",\n              \"bottom\": \"0\",\n              \"left\": \"0\",\n              \"display\": \"block\",\n              \"transition\": \"opacity 0.5s 0.5s\",\n              \"pointerEvents\": \"none\"\n            }\n          }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n              \"srcSet\": [\"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/5530d/masking-original.webp 320w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/0c8fb/masking-original.webp 640w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/94b1e/masking-original.webp 1280w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/0b34d/masking-original.webp 1920w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/d5269/masking-original.webp 2560w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/95cb8/masking-original.webp 4256w\"],\n              \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n              \"type\": \"image/webp\"\n            }}></source>{`\n          `}<source parentName=\"picture\" {...{\n              \"srcSet\": [\"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/8980b/masking-original.jpg 320w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/56d4e/masking-original.jpg 640w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/62aaf/masking-original.jpg 1280w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/aaf92/masking-original.jpg 1920w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/36eba/masking-original.jpg 2560w\", \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/28c97/masking-original.jpg 4256w\"],\n              \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n              \"type\": \"image/jpeg\"\n            }}></source>{`\n          `}<img parentName=\"picture\" {...{\n              \"className\": \"gatsby-resp-image-image\",\n              \"src\": \"/ff-services-docs/static/db1b5c526b2a2e7f5b3b50595ace206a/62aaf/masking-original.jpg\",\n              \"alt\": \"a picture of a person golfing with a green scenic background\",\n              \"title\": \"a picture of a person golfing with a green scenic background\",\n              \"loading\": \"lazy\",\n              \"style\": {\n                \"width\": \"100%\",\n                \"height\": \"100%\",\n                \"margin\": \"0\",\n                \"verticalAlign\": \"middle\",\n                \"position\": \"absolute\",\n                \"opacity\": \"0\",\n                \"transition\": \"opacity 0.5s\",\n                \"color\": \"inherit\",\n                \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                \"top\": \"0\",\n                \"left\": \"0\"\n              }\n            }}></img>{`\n        `}</picture>{`\n    `}</span></li>\n      <li parentName=\"ul\">{`A pre-signed URL with a read/write token for the output mask.`}</li>\n    </ul>\n    <p>{`Depending on your learning style, you may prefer to walk through this tutorial step-by-step or `}<a parentName=\"p\" {...{\n        \"href\": \"#full-example\"\n      }}>{`jump immediately to the full source code`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-an-access-token\"\n    }}>{`Retrieve an Access Token`}</h2>\n    <p>{`Open a secure terminal and `}<inlineCode parentName=\"p\">{`export`}</inlineCode>{` your `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{` as environment variables so that your later commands can access them:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export CLIENT_ID=yourClientIdAsdf123\nexport CLIENT_SECRET=yourClientSecretAsdf123\n`}</code></pre>\n    <p>{`Generate an access token:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\\\n--data-urlencode 'grant_type=client_credentials' \\\\\n--data-urlencode \"client_id=$CLIENT_ID\" \\\\\n--data-urlencode \"client_secret=$CLIENT_SECRET\" \\\\\n--data-urlencode 'scope=openid,AdobeID,read_organizations'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-1\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def retrieve_access_token():\n    client_id = os.environ['CLIENT_ID']\n    client_secret = os.environ['CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,read_organizations'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    return token_data\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.CLIENT_ID,\n    client_secret: process.env.CLIENT_SECRET,\n    scope: 'openid,AdobeID,read_organizations',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  const response = await axios.request(config);\n  return response.data;\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\"access_token\":\"yourAccessTokenAsdf123\",\"token_type\":\"bearer\",\"expires_in\":86399}\n`}</code></pre>\n    <p>{`Export this access token in your secure terminal so that the next script can conveniently access it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export ACCESS_TOKEN=yourAccessTokenAsdf123\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-mask\"\n    }}>{`Create Mask`}</h2>\n    <p>{`Next, call the `}<a parentName=\"p\" {...{\n        \"href\": \"../api/photoshop_createMask.md\"\n      }}>{`Photoshop Create Mask API`}</a>{`:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl-1\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://image.adobe.io/sensei/mask' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"x-api-key: $CLIENT_ID\" \\\\\n--header \"Authorization: Bearer $ACCESS_TOKEN\" \\\\\n--data '{\n    \"input\":{\n      \"href\":\"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\",\n      \"storage\":\"azure\"\n    },\n    \"output\":{\n      \"href\":\"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\",\n      \"storage\":\"azure\"\n    }\n  }'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-2\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Replace with your actual pre-signed URLs and storage option\nSIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'\nSIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'\nSTORAGE = 'azure'  # e.g., 'external', 'azure'\n\ndef create_mask(access_token):\n  headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['CLIENT_ID']\n        'Authorization': f'Bearer {access_token}',\n    }\n\n    data = {\n        'input': {'href': SIGNED_GET_URL, 'storage': STORAGE},\n        'output': {'href': SIGNED_POST_URL, 'storage': STORAGE},\n    }\n\n    response = requests.post('https://image.adobe.io/sensei/mask', headers=headers, json=data)\n    response.raise_for_status()\n    return response.json()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-2\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const SIGNED_GET_URL = \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\";\nconst SIGNED_POST_URL = \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\";\nconst STORAGE = \"azure\"; // e.g., 'external', 'azure'\n\nasync function createMask(accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    input: { href: SIGNED_GET_URL, storage: STORAGE },\n    output: { href: SIGNED_POST_URL, storage: STORAGE },\n  };\n\n  const config = {\n    method: 'post',\n    url: 'https://image.adobe.io/sensei/mask',\n    headers: headers,\n    data: data,\n  };\n\n  const response = await axios.request(config);\n  return response.data;\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"https://image.adobe.io/sensei/status/<:jobId>\"\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"get-status---mask\"\n    }}>{`Get Status - Mask`}</h2>\n    <p>{`Next up, we will use the `}<a parentName=\"p\" {...{\n        \"href\": \"../api/photoshop_status_mask.md\"\n      }}>{`Get Status - Mask`}</a>{` endpoint to monitor the job status until it completes.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl-2\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://image.adobe.io/sensei/status/<:jobId>' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"x-api-key: $CLIENT_ID\" \\\\\n--header \"Authorization: Bearer $ACCESS_TOKEN\" \n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-3\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def check_job_status(job_id, access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}',\n    }\n\n    status_url = f'https://image.adobe.io/sensei/status/{job_id}'\n    response = requests.get(status_url, headers=headers)\n    response.raise_for_status()\n    return response.json()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-3\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function checkJobStatus(jobId, accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const url = \\`https://image.adobe.io/sensei/status/\\${jobId}\\`;\n\n  const response = await axios.get(url, { headers: headers });\n  return response.data;\n}\n`}</code></pre>\n    <p>{`A successful response looks like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"jobId\": \"f54e0fcb-260b-47c3-b520-111111\",\n  \"created\": \"2024-11-28T23:07:01.264Z\",\n  \"modified\": \"2024-11-28T23:07:03.036Z\",\n  \"status\": \"succeeded\",\n  \"metadata\": {\n    \"service\": {}\n  },\n  \"output\": {\n    \"href\": \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\",\n    \"storage\": \"azure\",\n    \"mask\": {\n      \"format\": \"soft\"\n    },\n    \"color\": {\n      \"space\": \"rgb\"\n    }\n  },\n  \"options\": {\n    \"optimize\": \"performance\"\n  },\n  \"errors\": [\n    {}\n  ],\n  \"_links\": {\n    \"self\": {}\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"view-created-mask\"\n    }}>{`View Created Mask`}</h2>\n    <p>{`Access the mask at the `}<inlineCode parentName=\"p\">{`output.href`}</inlineCode>{` URL (the `}<inlineCode parentName=\"p\">{`SIGNED_POST_URL`}</inlineCode>{` provided earlier). 🎉`}</p>\n    <h2 {...{\n      \"id\": \"full-example\"\n    }}>{`Full Example`}</h2>\n    <p>{`You can review the `}<a parentName=\"p\" {...{\n        \"href\": \"#prerequisites\"\n      }}>{`prerequisites`}</a>{` section to understand how to set up your environment prior to running this code. Note that this is an example only and is not production-ready and requires additional error handling, logging, security measures, and more before you can run it at scale in a live application.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"python-4\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import os\nimport time\nimport requests\n\n# Replace with your actual pre-signed URLs and storage option\nSIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'  # Input image URL\nSIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'  # Output mask URL\nSTORAGE = 'azure'  # e.g., 'external', 'azure'\n\n\ndef main():\n    access_token = retrieve_access_token()\n    job_response = create_mask(access_token)\n    job_id = job_response['_links']['self']['href'].split('/')[-1]\n    check_job_status(job_id, access_token)\n\ndef retrieve_access_token():\n    client_id = os.environ['CLIENT_ID']\n    client_secret = os.environ['CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,read_organizations',\n    }\n\n    try:\n        response = requests.post(token_url, data=payload)\n        response.raise_for_status()\n        access_token = response.json()['access_token']\n        print('Access Token Retrieved')\n        return access_token\n    except requests.exceptions.RequestException as error:\n        print('Error retrieving access token:', error.response.text)\n        exit(1)\n\ndef create_mask(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}',\n    }\n\n    data = {\n        'input': {'href': SIGNED_GET_URL, 'storage': STORAGE},\n        'output': {'href': SIGNED_POST_URL, 'storage': STORAGE},\n    }\n\n    try:\n        response = requests.post(\n            'https://image.adobe.io/sensei/mask', headers=headers, json=data\n        )\n        response.raise_for_status()\n        print('Mask Creation Job Submitted:', response.json())\n        return response.json()\n    except requests.exceptions.RequestException as error:\n        print('Error during create_mask:', error.response.text)\n        exit(1)\n\ndef check_job_status(job_id, access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}',\n    }\n\n    url = f'https://image.adobe.io/sensei/status/{job_id}'\n\n    try:\n        status = 'submitted'\n        while status not in ['succeeded', 'failed']:\n            time.sleep(5)  # Wait for 5 seconds\n            response = requests.get(url, headers=headers)\n            response.raise_for_status()\n            status_response = response.json()\n            status = status_response.get('status')\n            print(f'Job Status: {status}')\n        if status == 'succeeded':\n            print('Mask creation completed successfully!')\n            print('You can access the mask at your SIGNED_POST_URL.')\n        else:\n            print('Mask creation failed.')\n    except requests.exceptions.RequestException as error:\n        print('Error checking job status:', error.response.text)\n        exit(1)\n\nif __name__ == '__main__':\n    main()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-4\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const axios = require('axios');\nconst qs = require('qs');\n\n// Replace with your actual pre-signed URLs and storage option\nconst SIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'; // Input image URL\nconst SIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'; // Output mask URL\nconst STORAGE = 'azure'; // e.g., 'external', 'azure'\n\n(async () => {\n  const accessToken = await retrieveAccessToken();\n  const jobResponse = await createMask(accessToken);\n  const jobId = jobResponse._links.self.href.split('/').pop();\n  await checkJobStatus(jobId, accessToken);\n})();\n\nasync function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.CLIENT_ID,\n    client_secret: process.env.CLIENT_SECRET,\n    scope: 'openid,AdobeID,read_organizations',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    const { access_token } = response.data;\n    console.log('Access Token Retrieved');\n    return access_token;\n  } catch (error) {\n    console.error('Error retrieving access token:', error.response.data);\n  }\n}\n\nasync function createMask(accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    input: { href: SIGNED_GET_URL, storage: STORAGE },\n    output: { href: SIGNED_POST_URL, storage: STORAGE },\n  };\n\n  const config = {\n    method: 'post',\n    url: 'https://image.adobe.io/sensei/mask',\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Mask Creation Job Submitted:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error during createMask:', error.response.data);\n  }\n}\n\nasync function checkJobStatus(jobId, accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const url = \\`https://image.adobe.io/sensei/status/\\${jobId}\\`;\n\n  try {\n    let status = 'submitted';\n    while (status !== 'succeeded' && status !== 'failed') {\n      await new Promise((resolve) => setTimeout(resolve, 5000)); // Wait for 5 seconds\n      const response = await axios.get(url, { headers: headers });\n      status = response.data.status;\n      console.log(\\`Job Status: \\${status}\\`);\n    }\n\n    if (status === 'succeeded') {\n      console.log('Mask creation completed successfully!');\n      console.log('You can access the mask at your SIGNED_POST_URL.');\n    } else {\n      console.error('Mask creation failed.');\n    }\n  } catch (error) {\n    console.error('Error checking job status:', error.response.data);\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deepen-your-understanding\"\n    }}>{`Deepen Your Understanding`}</h2>\n    <p>{`Explore more Photoshop API options in our `}<a parentName=\"p\" {...{\n        \"href\": \"../how-tos/photoshop-actions\"\n      }}>{`Photoshop Tutorials`}</a>{` 🚀`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","CodeBlock","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","style","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}