{
  "openapi": "3.0.0",
  "info": {
    "title": "Photoshop API Reference",
    "description": "Photoshop Remove Background API for Firefly Services.",
    "version": "V2",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://image.adobe.io",
      "description": "Production endpoint"
    }
  ],
  "paths": {
    "/v2/remove-background": {
      "post": {
        "operationId": "removeBackground",
        "summary": "Remove background",
        "description": "This endpoint allows you to remove the background from an image. The request is processed asynchronously and the status of the running job can be checked with the Get Status endpoint.",
        "x-ffs-async-job": true,
        "x-ffs-job-status-fetcher": "facadeJobStatus",
        "parameters": [
          {
            "name": "Authorization",
            "description": " The bearer token for the user. This is the access token.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "description": "The API key/Client ID.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "description": "The content type of the request. The value is `application/json`.",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhotoroomRemoveBackgroundRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobLinkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobError"
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "error_code": "unauthorized",
                      "message": "User is not entitled to perform the requested operation."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobError"
                },
                "examples": {
                  "access_error": {
                    "value": {
                      "error_code": "access_error",
                      "message": "User is not entitled to perform the requested operation."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobError"
                },
                "examples": {
                  "rate_limited": {
                    "value": {
                      "error_code": "rate_limited",
                      "message": "Too many requests."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobError"
                },
                "examples": {
                  "runtime_error": {
                    "value": {
                      "error_code": "runtime_error",
                      "message": "Internal Server Error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/status/{jobId}": {
      "get": {
        "operationId": "facadeJobStatus",
        "summary": "Retrieve job status",
        "description": "Retrieve the status of a running job by providing the job ID. The job ID is obtained from the response of the asynchronous API call.",
        "x-ffs-status-fetcher": true,
        "x-ffs-job-name": "FacadeAsyncJob",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "description": "The job ID from the response of the Remove Background API call.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusPollPayload"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobError"
                }
              }
            }
          },
          "404": {
            "description": "Unknown Job ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "X-API-KEY",
        "in": "header"
      },
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "UrlResource": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL of the resource. Only these listed domains are accepted in the request:  \n  <ul><li><code>amazonaws.com</code></li><li><code>windows.net</code></li><li><code>dropboxusercontent.com</code></li><li><code>assets.frame.io</code></li><li><code>storage.googleapis.com</code></li></ul>"
          }
        },
        "required": [
          "url"
        ]
      },
      "PhotoroomRemoveBgInputImage": {
        "type": "object",
        "properties": {
          "source": {
            "description": "The source of the input image. Dimensions of the image should not be greater than 6000px X 6000px. The image media type must be `image/jpeg`, `image/png`, or `image/webp`.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UrlResource"
              }
            ]
          }
        },
        "required": [
          "source"
        ]
      },
      "RemoveBgMode": {
        "type": "string",
        "description": "The mode of background removal.",
        "default": "cutout",
        "enum": [
          "cutout",
          "mask"
        ]
      },
      "PhotoroomRemoveBgOutputImageMediaType": {
        "type": "string",
        "description": "The media type of the output image. By default this will match the input source file format.",
        "enum": [
          "image/jpeg",
          "image/png",
          "image/webp"
        ]
      },
      "PhotoroomRemoveBgOutputImageOptions": {
        "type": "object",
        "properties": {
          "mediaType": {
            "$ref": "#/components/schemas/PhotoroomRemoveBgOutputImageMediaType"
          }
        }
      },
      "PhotoroomColor": {
        "type": "object",
        "properties": {
          "red": {
            "type": "number",
            "description": "The red value of the color.",
            "minimum": 0,
            "maximum": 255
          },
          "green": {
            "type": "number",
            "description": "The green value of the color.",
            "minimum": 0,
            "maximum": 255
          },
          "blue": {
            "type": "number",
            "description": "The blue value of the color.",
            "minimum": 0,
            "maximum": 255
          },
          "alpha": {
            "type": "number",
            "description": "The transparency value. 0 is fully transparent and 1 is fully opaque.",
            "minimum": 0,
            "maximum": 1
          }
        },
        "required": [
          "red",
          "green",
          "blue",
          "alpha"
        ]
      },
      "PhotoroomRemoveBackgroundRequest": {
        "type": "object",
        "properties": {
          "image": {
            "description": "The image to be processed.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhotoroomRemoveBgInputImage"
              }
            ]
          },
          "mode": {
            "$ref": "#/components/schemas/RemoveBgMode"
          },
          "output": {
            "description": "The options for the output image.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhotoroomRemoveBgOutputImageOptions"
              }
            ]
          },
          "trim": {
            "type": "boolean",
            "description": "If true, the image returned is cropped to the cutout border. Transparent pixels are removed.",
            "default": false
          },
          "backgroundColor": {
            "description": "The background color.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhotoroomColor"
              }
            ]
          },
          "colorDecontamination": {
            "type": "number",
            "description": "If the value is greater than 0, automatically removes colored reflections that have been left on the main subject by the background.",
            "minimum": 0,
            "maximum": 1,
            "default": 0,
            "example": 0
          }
        },
        "required": [
          "image"
        ]
      },
      "JobLinkResponse": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "The job ID for the asynchronous job."
          },
          "statusUrl": {
            "type": "string",
            "description": "The URL to check the status of the asynchronous job."
          }
        },
        "required": [
          "jobId",
          "statusUrl"
        ]
      },
      "JobError": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "string",
            "description": "The error code."
          },
          "message": {
            "type": "string",
            "description": "The error message."
          },
          "validation_errors": {
            "description": "An array of validation errors.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "error_code"
        ]
      },
      "JobStatus": {
        "type": "string",
        "description": "status",
        "enum": [
          "not_started",
          "running",
          "failed",
          "succeeded"
        ]
      },
      "JobStatusPollPayload": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "jobId": {
            "type": "string",
            "description": "jobId"
          }
        },
        "required": [
          "status",
          "jobId"
        ]
      }
    }
  },
  "security": [
    {
      "apiKey": [],
      "Authorization": []
    }
  ]
}