{
    "openapi": "3.1.0",
    "info": {
      "version": "V3",
      "title": "Firefly API",
      "description": "REST API for Adobe Firefly for enterprise use.",
      "termsOfService": "https://www.adobe.com/content/dam/cc/en/legal/terms/enterprise/pdfs/PSLT-AdobeCreativeAPI-WW-2024v2.pdf"
  },
  "servers": [
      {
          "url": "https://firefly-api.adobe.io"
      }
  ],
  "security": [
    {
        "X-Api-Key": [],
        "AccessToken": []
    }
  ],
    "paths": {
      "/v3/custom-models": {
        "get": {
          "summary": "Retrieve custom models",
          "description": "Retrieve the custom models for a user.",
          "operationId": "getCustomModels",
          "parameters": [
            {
              "name": "x-user-token",
              "in": "header",
              "description": "A user token referencing the user's individual account, obtained using their credentials. The user token must be preceded by `Bearer`.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-request-id",
              "in": "header",
              "description": "A unique request identifier defined by you. This is used by Adobe Support to trace the request in logs. This header is automatically generated by the server if not set it explicitly.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "in": "query",
              "description": "A sorting option for the response list. For a reverse sort, use `-` (e.g., `-modifiedDate`). Multi-vector sorting is not currently supported.",
              "schema": {
                "type": "string",
                "default": "modifiedDate",
                "enum": ["assetName", "createdDate", "modifiedDate"]
              }
            },
            {
              "name": "start",
              "in": "query",
              "description": "The first result to include in a paginated response. Required if a `limit` is specified.",
              "schema": {
                "type": "string",
                "default": "0"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of custom models to return in a paginated response.",
              "schema": {
                "type": "string",
                "maximum": 50,
                "minimum": 1
              }
            },
            {
              "name": "publishedState",
              "in": "query",
              "description": "This filters custom models by published state.",
              "schema": {
                "type": "string",
                "default": "published",
                "enum": ["all", "ready", "published", "unpublished", "queued", "training", "failed", "cancelled"]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomModelsFF3pInfo"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "reason": "Bad Request",
                    "message": "The request is invalid."
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "reason": "Unauthorized",
                    "message": "Authorization Token is not accepted."
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "reason": "Forbidden",
                    "message": "API Key is not accepted."
                  }
                }
              }
            },
            "406": {
              "description": "Not Acceptable",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "reason": "Not Acceptable",
                    "message": "The requested format is not supported by this method."
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "reason": "Internal Server Error",
                    "message": "A problem occurred on our server."
                  }
                }
              }
            },
            "503": {
              "description": "Service Unavailable",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  },
                  "example": {
                    "reason": "Service Unavailable",
                    "message": "We are temporarily offline for maintenance. Try again later."
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
            "securitySchemes": {
              "AccessToken": {
                  "type": "http",
                  "scheme": "bearer"
              },
              "X-Api-Key": {
                  "type": "apiKey",
                  "name": "x-api-key",
                  "in": "header"
              }
          },
      "schemas": {
        "ErrorResponse": {
          "type": "object",
          "properties": {
            "reason": {
              "type": "string",
              "description": "The type of error that occurred."
            },
            "message": {
              "type": "string",
              "description": "A message describing the error."
            }
          },
          "xml": {
            "name": "error"
          }
        },
        "CustomModelsFF3pInfo": {
          "type": "object",
          "properties": {
            "custom_models": {
              "type": "array",
              "description": "Custom Models List",
              "items": {
                "$ref": "#/components/schemas/CustomModelFF3pInfo"
              }
            },
            "_links": {
              "$ref": "#/components/schemas/Links"
            },
            "total_count": {
              "type": "integer",
              "description": "Total results for query",
              "format": "int32"
            }
          }
        },
        "CustomModelFF3pInfo": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "description": "Custom Model version."
            },
            "assetName": {
              "type": "string",
              "description": "Custom Model name."
            },
            "size": {
              "type": "integer",
              "description": "The storage amount used.",
              "format": "int64"
            },
            "etag": {
              "type": "string",
              "description": "An identifier for the specific version of the asset."
            },
            "trainingMode": {
              "type": "string",
              "enum": ["subject", "style"],
              "description": "The [training mode of the model](../firefly-api-reference/custom-models.md#training-mode). When this is 'subject', the 'conceptId' must be mentioned in the prompt."
            },
            "assetId": {
              "type": "string",
              "description": "A unique identifier for the asset."
            },
            "mediaType": {
              "type": "string",
              "description": "The media type specific to the asset."
            },
            "createdDate": {
              "type": "string",
              "format": "date-time"
            },
            "modifiedDate": {
              "type": "string",
              "format": "date-time"
            },
            "publishedState": {
              "type": "string",
              "enum": ["never", "published", "unpublished"],
              "description": "Status for the asset. The 'unpublished' value applies when an asset is published and then subsequently revoked."
            },
            "baseModel": {
              "$ref": "#/components/schemas/BaseModel",
              "description": "The underlying GenAI model used to train the Custom Model."
            },
            "samplePrompt": {
              "type": "string",
              "description": "Example string provided by the custom model's trainer"
            },
            "displayName": {
              "type": "string",
              "description": "The asset name provided by the user, mapped from the name of the training set library."
            },
            "conceptId": {
              "type": "string",
              "description": "When 'trainingMode' is 'subject', this string specifies the subject for the prompt."
            }
          },
          "description": "Custom Model info"
        },
        "BaseModel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        },
        "Links": {
            "type": "object",
            "properties": {
              "page": {
                "$ref": "#/components/schemas/Link"
              },
              "next": {
                "$ref": "#/components/schemas/Link"
              }
            },
            "description": "Collection of hypermedia links for pagination, navigation, etc."
          },
          "Link": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "description": "Fully qualified URI or relative path for the link."
              },
              "rel": {
                "type": "string",
                "description": "Describes the relationship or function of the link (e.g. `next`, `page`, `self`)."
              },
              "templated": {
                "type": "boolean",
                "description": "Indicates whether or not the `href` supports URI template parameters."
              }
            },
            "description": "Standard representation of a hypermedia link."
          },
        "PageSpec": {
          "type": "object",
          "properties": {
            "orderBy": {
              "type": "string",
              "description": "List orderby"
            },
            "start": {
              "type": "string",
              "description": "List start position"
            },
            "next": {
              "type": "string",
              "description": "List next position"
            },
            "count": {
              "type": "integer",
              "description": "List page size",
              "format": "int32"
            },
            "type": {
              "type": "string",
              "description": "List page type"
            },
            "property": {
              "type": "string",
              "description": "List page property"
            }
          },
          "description": "List Page"
        }
      }
    }
  }
  
