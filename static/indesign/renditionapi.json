{
  "openapi": "3.0.0",
  "info": {
    "description": "Firefly Service's RESTful InDesign APIs offer resources to automate tedious,  time-consuming design tasks through scalable cloud services,  encouraging more personalization at scale, creative automation,  and faster content delivery.  ",
    "version": "",
    "title": "Firefly Services - InDesign APIs",
    "termsOfService": "https://www.adobe.com/content/dam/cc/en/legal/terms/enterprise/pdfs/PSLT-AdobeCreativeAPI-WW-2024v2.pdf",
    "contact": {
      "email": "idservices@adobe.com"
    }
  },
  "servers": [
    {
      "url": "https://indesign.adobe.io"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Rendition API",
      "description": "The Rendition API creates a version of a file in a specified format (e.g., PNG, JPEG, or PDF)."
    }
  ],
  "paths": {
    "/v3/create-rendition": {
      "post": {
        "summary": "Create JPEG, PNG, or PDF renditions",
        "description": "Create a JPEG, PNG, or PDF rendition of a specific InDesign document. <br></br> The rendition output MIME types are:  <ul> `image/jpeg` for JPEG. </ul>  <ul> `image/png` for PNG. </ul> <ul> `application/pdf` for PDF. </ul>",
        "operationId": "renditionJob",
        "parameters": [
          {
            "name": "x-gw-ims-org-id",
            "in": "header",
            "description": "This is the identifier for Adobe Identity Management Service (IMS) as defined in Adobe's developer console. This is optional.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "The API key as defined in Adobe's developer console.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "The authorization token with bearer \"token_value\".",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRenditionRequest"
              }
            }
          },
          "description": "This object specifies parameters for the JPEG, PNG or PDF output.",
          "required": true
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/Accepted"
          },
          "400": {
            "$ref": "#/components/responses/BadParams"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "InputAsset": {
        "type": "object",
        "description": "The URL where the asset can be found.",
        "required": [
          "source"
        ],
        "properties": {
          "source": {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL of the asset."
              },
              "storageType": {
                "type": "string",
                "description": "This is an optional parameter, but IT IS RECOMMENDED to provide this information.",
                "enum": [
                  "Azure",
                  "Dropbox"
                ]
              }
            }
          },
          "destination": {
            "type": "string",
            "description": "This provides a path relative to a temporary base directory (a working directory) where the resource would be downloaded. This is used to identify the assets within the parameters. It cannot go up using '..' or '/'. Should be a valid file name."
          }
        }
      },
      "BaseJobRequest": {
        "description": "Base job request for any job.",
        "required": [
          "assets"
        ],
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputAsset"
            },
            "description": "Information about the assets, which will be used to process the job."
          },
          "params": {
            "type": "object",
            "properties": {
              "generalSettings": {
                "description": "General settings.",
                "type": "object",
                "properties": {
                  "fonts": {
                    "description": "Settings related to fonts.",
                    "type": "object",
                    "properties": {
                      "fontsDirectories": {
                        "description": "This lists the directories to be used as font directories for the input InDesign documents. \"Document Fonts\" in parallel to the document will continue to work even without specifying. In absence of this, temporary base directory (working directory) will be considered as a font directory.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "This provides a path of a directory relative to a temporary base directory (working directory) where the fonts can be found. It cannot go up using '..' or '/'. Should be a valid path. For specifying working directory, mention '.'."
                        }
                      }
                    }
                  },
                  "links": {
                    "description": "Settings related to links.",
                    "type": "object",
                    "properties": {
                      "replaceLinks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "targetDocument",
                            "mapping"
                          ],
                          "properties": {
                            "targetDocument": {
                              "description": "The document in which the relinking is to be done.",
                              "type": "string"
                            },
                            "mapping": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "newAssetRelativePath"
                                ],
                                "properties": {
                                  "currentURI": {
                                    "type": "string",
                                    "description": "The existing URI of the link that needs relinking. If multiple links with this URI are found, all will be relinked. If linkID is provided, this attribute will be ignored. Either one of currentURI or linkID should be present."
                                  },
                                  "linkID": {
                                    "type": "integer",
                                    "description": "The ID of the link which is to be relinked. If currentURI, is also provided it would be ignored. Either one of currentURI or linkID should be present."
                                  },
                                  "newAssetRelativePath": {
                                    "type": "string",
                                    "description": "This provides a path relative to a temporary base directory (working directory) where the asset to be linked to can be found. It cannot go up using '..' or '/'. Should be a valid file name."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "appLogs": {
                    "description": "Describes parameters regarding application logs.",
                    "type": "object",
                    "properties": {
                      "logsRelativePath": {
                        "type": "string",
                        "description": "This provides a path to a file, relative to the temporary base directory (working directory). This file is where application's logs are to be dumped."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OutputAsset": {
        "description": "The destination URL where the output assets are posted after the job is processed.",
        "type": "object",
        "required": [
          "destination",
          "source"
        ],
        "properties": {
          "destination": {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "The URL of the asset."
              },
              "storageType": {
                "type": "string",
                "description": "Although this is optional, IT IS RECOMMENDED to provide this information.",
                "enum": [
                  "Azure",
                  "Dropbox",
                  "AWS"
                ]
              }
            }
          },
          "source": {
            "type": "string",
            "description": "This provides a path relative to the output where the resource would be generated. It cannot go up using '..' or '/'. This should be a valid file name."
          }
        }
      },
      "BaseJobRequestWithOutput": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseJobRequest"
          },
          {
            "description": "This is a base job request for any job with the option to specify output URLs.",
            "type": "object",
            "properties": {
              "outputs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OutputAsset"
                }
              }
            }
          }
        ]
      },
      "CreateRenditionRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseJobRequestWithOutput"
          },
          {
            "description": "Inputs and properties with which the job should be processed.",
            "type": "object",
            "required": [
              "params"
            ],
            "properties": {
              "params": {
                "type": "object",
                "required": [
                  "targetDocuments",
                  "outputMediaType"
                ],
                "properties": {
                  "targetDocuments": {
                    "description": "The documents that will be processed and rendered. Currently, only one document at a time is supported.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 1
                  },
                  "outputMediaType": {
                    "description": "The MIME type output of the rendered file.",
                    "type": "string",
                    "enum": [
                      "image/jpeg",
                      "image/png",
                      "application/pdf"
                    ]
                  },
                  "exportingSpread": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specify `true` if you consider range as spread numbers. Use `false` if you treat range as pages."
                  },
                  "pageRange": {
                    "type": "string",
                    "default": "All",
                    "description": "The page ranges, based on the index of the page within the document. The value can be 'All', as well as numeral ranges. If `exportingSpread` is true, this range would represent spread indices in the document."
                  },
                  "quality": {
                    "type": "string",
                    "description": "Defines the quality of the output.",
                    "default": "medium",
                    "enum": [
                      "low",
                      "medium",
                      "high",
                      "maximum"
                    ]
                  },
                  "renderingStyle": {
                    "type": "string",
                    "description": "Specifies formatting options for the converted JPEG images.",
                    "default": "baseline_encoding",
                    "enum": [
                      "baseline_encoding",
                      "progressive_encoding"
                    ]
                  },
                  "resolution": {
                    "type": "integer",
                    "default": 72,
                    "description": "Specifies the resolution of the final image.",
                    "minimum": 1,
                    "maximum": 2400
                  },
                  "colorSpace": {
                    "type": "string",
                    "description": "Specifies formatting options for converted JPEG images.",
                    "default": "rgb",
                    "enum": [
                      "rgb",
                      "cmyk",
                      "gray"
                    ]
                  },
                  "embedColorProfile": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specify `true` to embed the color profile. Otherwise, use `false`."
                  },
                  "antiAlias": {
                    "type": "boolean",
                    "default": true,
                    "description": "If `true`, anti-aliasing is used for text and vectors during export."
                  },
                  "simulateOverprint": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true`, this simulates the effects of overprinting spot and processes colors in the same way they would occur with a print."
                  },
                  "useDocumentBleeds": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true`, the document's bleed settings are used in the exported JPEG."
                  },
                  "colorSettingsFile": {
                    "type": "string",
                    "description": "This is the color settings file to be used for generating a rendition."
                  },
                  "transparentBackground": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true`, this uses a transparent background for the exported PNG. This is valid only for PNG renditions."
                  },
                  "createSeparateFiles": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specify `true` to create separate PDF files for all the specified pages/spreads. This is applicable only in case of PDF rendition."
                  },
                  "optimizeForFastWebView": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specify `true` to optimize the PDF for faster web viewing. This is applicable only in case of PDF rendition."
                  },
                  "embedPageThumbnails": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specify `true` for embedding page thumbnails. This is applicable only in case of PDF rendition."
                  },
                  "includeBookmarks": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true`, this displays bookmarks and table-of-contents entries as links in the bookmarks pane of the PDF document. If `false`, bookmarks are not exported. This is applicable only in case of PDF rendition."
                  },
                  "includeHyperlinks": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true`, this includes the hyperlinks when exporting the document. This is applicable only in case of PDF rendition."
                  },
                  "exportNonprintingObjects": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true`, this makes non-printing objects visible in the PDF document. This is applicable only in case of PDF rendition."
                  },
                  "exportGuidesAndGrids": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true`, this includes visible guides and baseline grids in the PDF. This is applicable only in case of PDF rendition. document."
                  },
                  "createTaggedPDF": {
                    "type": "boolean",
                    "default": true,
                    "description": "If `true`, this creates a tagged PDF file. This is applicable only in case of PDF rendition."
                  },
                  "includeInteractiveElements": {
                    "type": "string",
                    "description": "Specifies the option to draw interactive elements. This is applicable only in case of PDF rendition.",
                    "default": "do_not_include",
                    "enum": [
                      "do_not_include",
                      "appearance_only"
                    ]
                  },
                  "exportWhichLayers": {
                    "type": "string",
                    "description": "This indicates the image layers to be exported. This is applicable only in case of PDF rendition.",
                    "default": "export_all_layers",
                    "enum": [
                      "export_all_layers",
                      "export_visible_layers",
                      "export_visible_printable_layers"
                    ]
                  },
                  "jobOptionsFile": {
                    "type": "string",
                    "description": "This is the file used as the PDF creation settings file during the export. This will take precedence over the `pdfPreset` attribute. This is applicable only in case of PDF rendition."
                  },
                  "pdfPreset": {
                    "type": "string",
                    "description": "The export style to be used. This is applicable only in case of PDF rendition.",
                    "default": "High Quality Print",
                    "enum": [
                      "High Quality Print",
                      "PDF/X-1a:2001",
                      "PDF/X-3:2002",
                      "PDF/X-4:2008",
                      "Press Quality",
                      "Smallest File Size"
                    ]
                  },
                  "outputFileBaseString": {
                    "type": "string",
                    "description": "The name of the output file.",
                    "default": "It is derived from the original document filename."
                  },
                  "outputFolderPath": {
                    "type": "string",
                    "description": "The path of the output folder.",
                    "default": "A unique temporary folder name would be created."
                  }
                }
              }
            }
          }
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error_code": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "error_code"
        ]
      }
    },
    "responses": {
      "Accepted": {
        "description": "The job has been accepted for processing.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "The job ID."
                },
                "statusUrl": {
                  "type": "string",
                  "description": "The status URL."
                }
              }
            }
          }
        },
        "headers": {
          "link": {
            "schema": {
              "type": "string"
            },
            "description": "The status URL for a retry."
          },
          "retry-after": {
            "schema": {
              "type": "integer"
            },
            "description": "The number of seconds until the user should try again."
          },
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "The type of content that is returned (e.g., `application/json`)."
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "The length of the response content."
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "The Cross Origin Resource Sharing (CORS) header."
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates what HTTP methods are allowed."
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates which HTTP headers can be used during the actual request."
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "This header is used by servers to indicate that the client shall share HTTP responses."
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "This indicates how long the results of a preflight request can be cached."
          }
        }
      },
      "BadParams": {
        "description": "Bad Parameter",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "The type of content returned (e.g., `application/json`)."
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "The length of the response content."
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "The Cross Origin Resource Sharing (CORS) header."
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "This header indicates what HTTP methods are allowed."
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates which HTTP headers can be used during the actual request."
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "This header is used by servers to indicate that the client shall share HTTP responses."
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "This indicates how long the results of a preflight request can be cached."
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "The type of content returned (e.g., `application/json`)."
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "The length of the response content."
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "The Cross Origin Resource Sharing (CORS) header."
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates what HTTP methods are allowed."
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates which HTTP headers can be used during the actual request."
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "This header is used by servers to indicate that the client shall share HTTP responses."
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "This indicates how long the results of a preflight request can be cached."
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "The type of content returned (e.g., `application/json`)."
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "The length of the response content."
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "The Cross Origin Resource Sharing (CORS) header."
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "This header indicates what HTTP methods are allowed."
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates which HTTP headers can be used during the actual request."
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "This header is used by servers to indicate that the client shall share HTTP responses."
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "This indicates how long the results of a preflight request can be cached."
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "The type of content returned (e.g., `application/json`)."
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "The length of the response content."
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "The Cross Origin Resource Sharing (CORS) header."
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "This header indicates what HTTP methods are allowed."
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates which HTTP headers can be used during the actual request."
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "This header is used by servers to indicate that the client shall share HTTP responses."
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "This indicates how long the results of a preflight request can be cached."
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "The type of content returned (e.g., `application/json`)."
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "The length of the response content."
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "The Cross Origin Resource Sharing (CORS) header."
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "This header indicates what HTTP methods are allowed."
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates which HTTP headers can be used during the actual request."
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "This header is used by servers to indicate that the client shall share HTTP responses."
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "This indicates how long the results of a preflight request can be cached."
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "The format of the content returned (e.g., `application/json`)."
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "The length of the response content."
          },
          "Retry-After": {
              "schema": {
              "type": "integer"
              },
              "description": "The number of seconds until the user should try again."
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "The Cross Origin Resource Sharing (CORS) header."
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates what HTTP methods are allowed."
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "This indicates which HTTP headers can be used during the actual request."
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "This header is used by servers to indicate that the client shall share HTTP responses."
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "This indicates how long the results of a preflight request can be cached."
          }
        }
      }
    }
  }
}