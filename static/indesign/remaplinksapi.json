{
  "openapi": "3.0.0",
  "info": {
    "description": "Documentation for InDesign APIs - Firefly Services. This document provides a detailed specification of the various exposed APIs, that can be leveraged by developers.",
    "version": "",
    "title": "InDesign APIs - Firefly Services",
    "contact": {
      "email": "idservices@adobe.com"
    }
  },
  "tags": [
    {
      "name": "remapLinks",
      "description": "Remap Links API."
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/v3/remap-links": {
      "post": {
        "tags": [
          "remapLinks"
        ],
        "summary": "Remaps file-based links to AEM URLs in InDesign documents",
        "description": "Replaces existing file-based links in InDesign documents with AEM URLs. This is particularly useful for customers working with AEM using AAL, as it allows designers to work with the output files post-generation by having direct links to AEM URLs.",
        "operationId": "remapLinks",
        "parameters": [
          {
            "name": "x-gw-ims-org-id",
            "in": "header",
            "description": "Identifier for IMS organization as defined in Adobe's developer console. This is optional",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key as defined in Adobe's developer console",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization token with bearer \"token_value\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-aem-token",
            "in": "header",
            "description": "Bearer token generated for AEM technical account without the bearer keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemapLinksRequest"
              }
            }
          },
          "description": "Job request object that specifies parameters for remapping links in the InDesign document.",
          "required": true
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/Accepted"
          },
          "400": {
            "$ref": "#/components/responses/BadParams"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v3/status/{id}": {
      "get": {
        "summary": "Gets latest status for a job.",
        "description": "Returns the latest status event of a API job execution.",
        "parameters": [
          {
            "name": "x-gw-ims-org-id",
            "in": "header",
            "description": "Identifier for IMS organization as defined in Adobe's developer console. This is optional",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key as defined in Adobe's developer console",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization token with bearer \"token_value\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID, for which the status has to be retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status of an API job execution.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/notstartedEvent"
                    },
                    {
                      "$ref": "#/components/schemas/runningEvent"
                    },
                    {
                      "$ref": "#/components/schemas/succeededEvent"
                    },
                    {
                      "$ref": "#/components/schemas/failedEvent"
                    }
                  ]
                }
              }
            },
            "headers": {
              "retry-after": {
                "schema": {
                  "type": "integer"
                },
                "description": "Number of seconds until the user should try again"
              },
              "Content-Type": {
                "schema": {
                  "type": "string"
                },
                "description": "Type of content returned e.g. application/json"
              },
              "Content-Length": {
                "schema": {
                  "type": "integer"
                },
                "description": "Length of response content"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadParams"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://indesign.adobe.io/"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "Accepted": {
        "description": "The job has been accepted for processing.",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "ID"
                },
                "statusUrl": {
                  "type": "string",
                  "description": "Status URL"
                }
              }
            }
          }
        },
        "headers": {
          "link": {
            "schema": {
              "type": "string"
            },
            "description": "status url for retry"
          },
          "retry-after": {
            "schema": {
              "type": "integer"
            },
            "description": "Number of seconds until the user should try again"
          },
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "Type of content returned e.g. application/json"
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "Length of response content"
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "Cross Origin Resource Sharing header"
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicates what HTTP methods are allowed"
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicate which HTTP headers can be used during the actual request"
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "Header is used by servers to indicate that the client shall share HTTP responses"
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "Header indicates how long the results of a preflight request"
          }
        }
      },
      "BadParams": {
        "description": "Bad Parameter",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "Type of content returned e.g. application/json"
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "Length of response content"
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "Cross Origin Resource Sharing header"
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicates what HTTP methods are allowed"
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicate which HTTP headers can be used during the actual request"
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "Header is used by servers to indicate that the client shall share HTTP responses"
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "Header indicates how long the results of a preflight request"
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "Type of content returned e.g. application/json"
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "Length of response content"
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "Cross Origin Resource Sharing header"
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicates what HTTP methods are allowed"
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicate which HTTP headers can be used during the actual request"
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "Header is used by servers to indicate that the client shall share HTTP responses"
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "Header indicates how long the results of a preflight request"
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "Type of content returned e.g. application/json"
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "Length of response content"
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "Cross Origin Resource Sharing header"
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicates what HTTP methods are allowed"
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicate which HTTP headers can be used during the actual request"
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "Header is used by servers to indicate that the client shall share HTTP responses"
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "Header indicates how long the results of a preflight request"
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "Type of content returned e.g. application/json"
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "Length of response content"
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "Cross Origin Resource Sharing header"
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicates what HTTP methods are allowed"
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicate which HTTP headers can be used during the actual request"
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "Header is used by servers to indicate that the client shall share HTTP responses"
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "Header indicates how long the results of a preflight request"
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "Type of content returned e.g. application/json"
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "Length of response content"
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "Cross Origin Resource Sharing header"
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicates what HTTP methods are allowed"
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicate which HTTP headers can be used during the actual request"
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "Header is used by servers to indicate that the client shall share HTTP responses"
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "Header indicates how long the results of a preflight request"
          }
        }
      },
      "TooManyRequests": {
        "description": "Too many requests - rate limiting applied",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "headers": {
          "Content-Type": {
            "schema": {
              "type": "string"
            },
            "description": "Type of content returned e.g. application/json"
          },
          "Content-Length": {
            "schema": {
              "type": "integer"
            },
            "description": "Length of response content"
          },
          "Retry-After": {
            "schema": {
              "type": "integer"
            },
            "description": "The number of seconds to wait before making a new request."
          },
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            },
            "description": "Cross Origin Resource Sharing header"
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicates what HTTP methods are allowed"
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            },
            "description": "Header indicates which HTTP headers can be used during the actual request"
          },
          "Access-Control-Allow-Credentials": {
            "schema": {
              "type": "string"
            },
            "description": "Header used by servers to indicate that the client shall share HTTP responses"
          },
          "Access-Control-Max-Age": {
            "schema": {
              "type": "integer"
            },
            "description": "Header indicating how long the results of a preflight request can be cached"
          }
        }
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error_code": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "error_code"
        ]
      },
      "InputAsset": {
        "type": "object",
        "description": "The Url, from where the asset is to be fetched.",
        "required": [
          "source"
        ],
        "properties": {
          "source": {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the asset."
              },
              "storageType": {
                "type": "string",
                "description": "This is optional parameter. It is recommended to provide this information.",
                "enum": [
                  "Azure",
                  "Dropbox",
                  "Aws"
                ]
              }
            }
          },
          "destination": {
            "type": "string",
            "description": "This provides a path relative to a temporary base directory (working directory) where resource would be downloaded. This would be used to identify the assets within the parameters. It cannot go up using '..' or '/'. Should be a valid file name."
          }
        }
      },
      "OutputAsset": {
        "description": "The url, where the output assets are to be posted after the job processing.",
        "type": "object",
        "required": [
          "destination",
          "source"
        ],
        "properties": {
          "destination": {
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "URL of the asset."
              },
              "storageType": {
                "type": "string",
                "description": "This is optional parameter. It is recommended to provide this information.",
                "enum": [
                  "Azure",
                  "Dropbox",
                  "Aws"
                ]
              }
            }
          },
          "source": {
            "type": "string",
            "description": "This provides a path relative of the output where resource would be generated. It cannot go up using '..' or '/'. Should be a valid file name."
          }
        }
      },
      "BaseEvent": {
        "type": "object",
        "description": "Base event response for any job.",
        "properties": {
          "jobId": {
            "description": "Guid ID for the Job.",
            "type": "string"
          }
        }
      },
      "notstartedEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEvent"
          },
          {
            "description": "Job is in queued state.",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The current state of the job.",
                "enum": [
                  "not_started"
                ]
              }
            }
          }
        ]
      },
      "runningEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEvent"
          },
          {
            "description": "Job is in running state.",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The current state of the job.",
                "enum": [
                  "running"
                ]
              },
              "message": {
                "type": "string",
                "description": "Description of current running state."
              }
            }
          }
        ]
      },
      "succeededEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEvent"
          },
          {
            "description": "Job is succeeded.",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The current state of the job.",
                "enum": [
                  "succeeded"
                ]
              },
              "data": {
                "type": "object",
                "description": "Output response from current state of the job."
              },
              "dataURL": {
                "type": "string",
                "description": "The data returned from execution of the job. If the data is more than 250 kB and less the 20 MB, it will be provided as a presigned URL. If it is more than 20 MB, the job will fail."
              },
              "outputs": {
                "type": "object",
                "description": "This contains list of URL for all the generated assets"
              }
            }
          }
        ]
      },
      "failedEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEvent"
          },
          {
            "description": "Job is in failed state.",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The current state of the job.",
                "enum": [
                  "failed"
                ]
              },
              "error_code": {
                "type": "string",
                "description": "Error code for failure."
              },
              "message": {
                "type": "string",
                "description": "Error message for failure"
              },
              "data": {
                "type": "object",
                "description": "Detailed error information"
              }
            }
          }
        ]
      },
      "RemapLinksRequest": {
        "description": "Inputs for the link remapping request.",
        "type": "object",
        "required": [
          "params",
          "assets"
        ],
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputAsset"
            }
          },
          "params": {
            "type": "object",
            "required": [
              "targetDocument",
              "dataSource"
            ],
            "properties": {
              "targetDocument": {
                "description": "The InDesign document in which links need to be remapped.",
                "type": "string"
              },
              "dataSource": {
                "description": "Array of link mappings containing source and destination URIs.",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": [
                    "sourceURI",
                    "destinationURI"
                  ],
                  "properties": {
                    "sourceURI": {
                      "type": "string",
                      "description": "File path/resource URI for the existing link that needs to be remapped."
                    },
                    "destinationURI": {
                      "type": "string",
                      "description": "AEM URI that will replace the existing link."
                    }
                  }
                }
              }
            }
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputAsset"
            }
          }
        }
      }
    }
  }
} 