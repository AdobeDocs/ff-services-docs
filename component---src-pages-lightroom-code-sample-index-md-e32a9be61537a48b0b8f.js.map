{"version":3,"file":"component---src-pages-lightroom-code-sample-index-md-e32a9be61537a48b0b8f.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/lightroom/code-sample/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ff-services-docs/ff-services-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sample-code\"\n    }}>{`Sample Code`}</h1>\n    <h2 {...{\n      \"id\": \"lightroom\"\n    }}>{`Lightroom`}</h2>\n    <h3 {...{\n      \"id\": \"apply-autotone-to-an-image\"\n    }}>{`Apply Autotone to an image`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/lrService/autoTone \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"inputs\": {\n        \"href\": \"<SIGNED_GET_URL>\",\n        \"storage\": \"<storage>\"\n    },\n    \"outputs\": [\n        {\n            \"href\": \"<SIGNED_POST_URL>\",\n            \"type\": \"<type>\",\n            \"storage\": \"<storage>\"\n        }\n    ]\n}'\n`}</code></pre>\n    <p>{`This initiates an asynchronous job and returns a request body containing the href to poll for job status.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/lrService/status/<:jobId>\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`To verify the completion status of the task, utilize the `}<inlineCode parentName=\"p\">{`Get Status`}</inlineCode>{` API. Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"../code-sample/index.md#poll-for-status-and-results\"\n      }}>{`this link`}</a>{` for an example demonstrating how to check the status.  `}</p>\n    <h3 {...{\n      \"id\": \"autostraighten-an-image\"\n    }}>{`Autostraighten an image`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/lrService/autoStraighten \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"inputs\": {\n        \"href\": \"<SIGNED_GET_URL>\",\n        \"storage\": \"<storage>\"\n    },\n    \"outputs\": [\n        {\n            \"href\": \"<SIGNED_POST_URL>\",\n            \"type\": \"<type>\",\n            \"storage\": \"<storage>\"\n        }\n    ]\n}'\n`}</code></pre>\n    <p>{`This initiates an asynchronous job and returns a request body containing the href to poll for job status.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/lrService/status/<:jobId>\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`To verify the completion status of the task, utilize the `}<inlineCode parentName=\"p\">{`Get Status`}</inlineCode>{` API. Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"../code-sample/index.md#poll-for-status-and-results\"\n      }}>{`this link`}</a>{` for an example demonstrating how to check the status.`}</p>\n    <h3 {...{\n      \"id\": \"apply-presets-to-an-image\"\n    }}>{`Apply presets to an image`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/lrService/presets \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"inputs\": {\n        \"source\": {\n            \"href\": \"<SIGNED_GET_URL>\",\n            \"storage\": \"<storage>\"\n        },\n        \"presets\": [\n            {\n                \"href\": \"<SIGNED_GET_URL>\",\n                \"storage\": \"<storage>\"\n            },\n            {\n                \"href\": \"<SIGNED_GET_URL>\",\n                \"storage\": \"<storage>\"\n            }\n        ]\n    },\n    \"outputs\": [\n        {\n            \"href\": \"<SIGNED_POST_URL>\",\n            \"type\": \"<type>\",\n            \"storage\": \"<storage>\"\n        }\n    ]\n}'\n`}</code></pre>\n    <p>{`This initiates an asynchronous job and returns a request body containing the href to poll for job status.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/lrService/status/<:jobId>\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`To verify the completion status of the task, utilize the `}<inlineCode parentName=\"p\">{`Get Status`}</inlineCode>{` API. Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"../code-sample/index.md#poll-for-status-and-results\"\n      }}>{`this link`}</a>{` for an example demonstrating how to check the status.`}</p>\n    <h3 {...{\n      \"id\": \"apply-edits-to-an-image\"\n    }}>{`Apply edits to an image`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/lrService/edit \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"inputs\": {\n        \"source\": {\n            \"href\": \"<SIGNED_GET_URL>\",\n            \"storage\": \"<storage>\"\n        }\n    },\n    \"options\": {\n        \"Exposure\": -5.00 to 5.00,\n        \"Contrast\": -100 to 100,\n        \"Sharpness\": 0 10 150,\n        \"WhiteBalance\": <\"As Shot\", \"Auto\", \"Cloudy\", \"Custom\", \"Daylight\", \"Flash\", \"Fluorescent\", \"Shade\", \"Tungsten\">\n        \"Saturation\": -100 to 100,\n        \"ColorNoiseReduction\": 0 to 100,\n        \"NoiseReduction\": 0 to 100,\n        \"VignetteAmount\": -100 to 100,\n        \"Vibrance\": -100 to 100,\n        \"Highlights\": -100 to 100,\n        \"Shadows\": -100 to 100,\n        \"Whites\": -100 to 100,\n        \"Blacks\": -100 to 100,\n        \"Clarity\": -100 to 100,\n        \"Dehaze\": -100 to +100,\n        \"SharpenRadius\": 0.5 to 3.0,\n        \"SharpenDetail\": 0 to 100,\n        \"SharpenEdgeMasking\": 0 to 100,\n        \"Texture\": -100 t0 100\n    },\n    \"outputs\": [\n        {\n            \"href\": \"<SIGNED_POST_URL>\",\n            \"type\": \"<type>\",\n            \"storage\": \"<storage>\"\n        }\n    ]\n}'\n`}</code></pre>\n    <p>{`This initiates an asynchronous job and returns a request body containing the href to poll for job status.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/lrService/status/<:jobId>\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`To verify the completion status of the task, utilize the `}<inlineCode parentName=\"p\">{`Get Status`}</inlineCode>{` API. Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"../code-sample/index.md#poll-for-status-and-results\"\n      }}>{`this link`}</a>{` for an example demonstrating how to check the status.`}</p>\n    <h3 {...{\n      \"id\": \"apply-xmp-to-an-image\"\n    }}>{`Apply xmp to an image`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/lrService/xmp \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"inputs\": {\n        \"href\": \"<SIGNED_GET_URL>\",\n        \"storage\": \"<storage>\"\n    },\n    \"options\": {\n        \"xmp\": \"<xmp>\",\n        \"orientation\": \"<orientation>\"\n    },\n    \"outputs\": [\n        {\n            \"href\": \"<SIGNED_POST_URL>\",\n            \"storage\": \"<storage>\",\n            \"type\": \"<type>\"\n        }\n    ]\n}'\n`}</code></pre>\n    <p>{`This initiates an asynchronous job and returns a request body containing the href to poll for job status.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/lrService/status/<:jobId>\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`To verify the completion status of the task, utilize the `}<inlineCode parentName=\"p\">{`Get Status`}</inlineCode>{` API. Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"../code-sample/index.md#poll-for-status-and-results\"\n      }}>{`this link`}</a>{` for an example demonstrating how to check the status.`}</p>\n    <h3 {...{\n      \"id\": \"poll-for-status-and-results\"\n    }}>{`Poll for status and results`}</h3>\n    <p>{`Use the JobID to poll on the href that is returned in the response from one of the Lightroom APIs.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Upon successful job completion, the output file will be available at the specified output href.`}</li>\n      <li parentName=\"ol\">{`If the job failed due to an error, the `}<inlineCode parentName=\"li\">{`errorDetails`}</inlineCode>{` field in the response will contain the details of the failure.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X GET \\\\\n  https://image.adobe.io/lrService/status/<jobId> \\\\\n  -H \"Authorization: Bearer $token\"  \\\\\n  -H \"x-api-key: $apiKey\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n`}</code></pre>\n    <p>{`And this will return a request body containing the job status for each requested output and eventually either errors or the hrefs to the requested outputs`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"jobId\":\"<jobId>\",\n  \"created\":\"2018-01-04T12:57:15.12345:Z\",\n  \"modified\":\"2018-01-04T12:58:36.12345:Z\",\n  \"outputs\":[\n  {\n      \"input\":\"<input_file_href>\",\n      \"status\":\"succeeded\",\n      \"_links\":{\n        \"self\":\n        {\n          \"href\":\"<output_file_href>\",\n          \"storage\":\"<storage>\"\n        }\n      }\n    }\n  ],\n  \"_links\":{\n    \"self\":{\n      \"href\":\"https://image.adobe.io/lrService/status/<jobId>\"\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"triggering-an-event-from-the-apis\"\n    }}>{`Triggering an Event from the API's`}</h2>\n    <p>{`In order to start receiving the events in your Webhook Application, you will need to pass in your IMS ORG ID in a header: `}<inlineCode parentName=\"p\">{`x-gw-ims-org-id: <YOUR_IMS_ORG_ID>`}</inlineCode>{`, when you make an API call to initiate a job. Please have a look at the example below that demonstrates the usage of the new header and a sample event received for that job.`}</p>\n    <h3 {...{\n      \"id\": \"auto-tone-an-image-through-the-lightroom-api\"\n    }}>{`Auto tone an image through the Lightroom API`}</h3>\n    <h4 {...{\n      \"id\": \"step-1-initiate-a-job-to-auto-tone-an-image\"\n    }}>{`Step 1: Initiate a job to auto tone an image`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -X POST \\\\\n  https://image.adobe.io/lrService/autoTone \\\\\n  -H \"Authorization: Bearer $token\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -H \"x-api-key: <YOUR_API_KEY>\" \\\\\n  -H 'x-gw-ims-org-id: <YOUR_IMS_ORG_ID>' \\\\\n  -d '{\n    \"inputs\": {\n      \"href\": \"<SIGNED_GET_URL>\",\n      \"storage\": \"<storage>\"\n    },\n    \"outputs\": [\n    {\n      \"href\": \"<SIGNED_POST_URL>\",\n      \"type\": \"<type>\",\n      \"storage\": \"<storage>\"\n    }\n  ]\n}'\n`}</code></pre>\n    <p>{`This initiates an asynchronous job and returns a request body containing the href to poll for job status.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/lrService/status/eb4a9211-eb8a-4e88-b853-b9c08ba47427\"\n        }\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"step-2-receive-the-jobs-status-on-the-webhook-application-when-the-job-is-complete\"\n    }}>{`Step 2: Receive the Job's status on the Webhook application when the job is complete`}</h4>\n    <p>{`The value in the key `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{` inside the event JSON contains the result of the job. Here is a sample event received from the job initiated above:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"event_id\": \"7b59cc70-88d7-4895-b204-87f5350a0cce\",\n  \"event\": {\n    \"header\": {\n      \"msgType\": \"JOB_COMPLETION_STATUS\",\n      \"msgId\": \"eb4a9211-eb8a-4e88-b853-b9c08ba47427\",\n      \"imsOrgId\": \"<YOUR_IMS_ORG_ID>\",\n      \"eventCode\": \"lightroom-job-status\",\n      \"_pipelineMeta\": {\n        \"pipelineMessageId\": \"1586290300876:944289:VA7_A1:149:0\"\n      },\n      \"_smarts\": {\n        \"definitionId\": \"3ee6c9056a9d72fc40e09ddf5fdbb0af752e8e49\",\n        \"runningSmartId\": \"psmart-yw6wosjksniuuathenny\"\n      },\n      \"_adobeio\": {\n        \"imsOrgId\": \"<YOUR_IMS_ORG_ID>\",\n        \"providerMetadata\": \"di_event_code\",\n        \"eventCode\": \"lightroom-job-status\"\n      }\n    },\n    \"body\": {\n      \"jobId\": \"eb4a9211-eb8a-4e88-b853-b9c08ba47427\",\n      \"outputs\": [\n        {\n          \"input\": \"<SIGNED_GET_URL>\",\n          \"status\": \"succeeded\",\n          \"_links\": {\n            \"self\": [\n              {\n                \"href\": \"<SIGNED_POST_URL>\",\n                \"storage\": \"<storage>\"\n              }\n            ]\n          }\n        }\n      ],\n      \"_links\": {\n        \"self\": {\n          \"href\": \"https://image.adobe.io/lrService/status/eb4a9211-eb8a-4e88-b853-b9c08ba47427\"\n        }\n      }\n    }\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}