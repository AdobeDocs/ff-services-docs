{
    "openapi": "3.0.0",
    "info": {
      "description": "Firefly Service's RESTful InDesign APIs offer resources to automate tedious,  time-consuming design tasks through scalable cloud services,  encouraging more personalization at scale, creative automation,  and faster content delivery.  ",
      "version": "",
      "title": "Firefly Services - InDesign APIs",
      "termsOfService": "https://www.adobe.com/content/dam/cc/en/legal/terms/enterprise/pdfs/PSLT-AdobeCreativeAPI-WW-2024v2.pdf",
      "contact": {
        "email": "idservices@adobe.com"
      }
    },
    "servers": [
      {
        "url": "https://indesign.adobe.io"
      }
    ],
    "security": [
      {
        "ApiKeyAuth": []
      },
      {
        "BearerAuth": []
      }
    ],
    "tags": [
      {
        "name": "Job Status API",
        "description": "Get the job status of a custom script execution job. Each call retrieves the most recent status event for the job and each event refers to a different stage of execution. `not_started` is generated at the creation of the job. `running` is generated when execution begins (at app-engine). `succeeded` is generated when execution of an API Job is complete. `partial_success` is generated when execution of an API Job is complete but some non-critical errors occurred. `failed` is generated if an API Job execution fails."
      }
    ],
    "paths": {
      "/v3/status/{id}": {
        "get": {
          "operationId": "getJobStatus",
          "summary": "Get the status of a job",
          "description": "Return the latest status of a custom script job that has been executed.",
          "parameters": [
            {
              "name": "x-gw-ims-org-id",
              "in": "header",
              "description": "This is the identifier for Adobe Identity Management Service (IMS) as defined in Adobe's developer console. This is optional.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "x-api-key",
              "in": "header",
              "description": "The API key as defined in Adobe's developer console.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "description": "The authorization token with bearer \"token_value\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "The ID of the job you want to see the status of. This comes from the response of the executed job request.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Status of a API Job execution.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/notstartedEvent"
                      },
                      {
                        "$ref": "#/components/schemas/runningEvent"
                      },
                      {
                        "$ref": "#/components/schemas/succeededEvent"
                      },
                      {
                        "$ref": "#/components/schemas/failedEvent"
                      },
                      {
                        "$ref": "#/components/schemas/partialSuccessEvent"
                      }
                    ]
                  }
                }
              },
              "headers": {
                "retry-after": {
                  "schema": {
                    "type": "integer"
                  },
                  "description": "The number of seconds until the user should try again."
                },
                "Content-Type": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The type of content returned (e.g., `application/json`)."
                },
                "Content-Length": {
                  "schema": {
                    "type": "integer"
                  },
                  "description": "The length of the response."
                }
              }
            },
            "400": {
                "$ref": "#/components/responses/BadParams"
            },
            "401": {
                "$ref": "#/components/responses/Unauthorized"
            },
            "403": {
                "$ref": "#/components/responses/Forbidden"
            },
            "404": {
                "$ref": "#/components/responses/NotFound"
            },
            "429": {
                "$ref": "#/components/responses/TooManyRequests"
            },
            "500": {
                "$ref": "#/components/responses/InternalServerError"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "ApiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "x-api-key"
        },
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "BaseEvent": {
          "type": "object",
          "description": "The job event response object.",
          "properties": {
            "jobId": {
              "description": "The GUID for the job.",
              "type": "string"
            }
          }
        },
        "notstartedEvent": {
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseEvent"
            },
            {
              "description": "The status when a job is in queued state.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current state of the job.",
                  "enum": [
                    "not_started"
                  ]
                }
              }
            }
          ]
        },
        "runningEvent": {
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseEvent"
            },
            {
              "description": "Job is in running state.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current state of the job.",
                  "enum": [
                    "running"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "A description of the current running state."
                }
              }
            }
          ]
        },
        "succeededEvent": {
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseEvent"
            },
            {
              "description": "The job has succeeded.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current state of the job.",
                  "enum": [
                    "succeeded"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "The output response from the current state of the job."
                },
                "dataURL": {
                  "type": "string",
                  "description": "The data returned from the execution of the job. If the data size is between 250 KB and 20 MB, it will be provided as a pre-signed URL. If it is larger than 20 MB, the job will fail."
                },
                "outputs": {
                  "type": "object",
                  "description": "A list of URLs for all the generated assets."
                }
              }
            }
          ]
        },
        "failedEvent": {
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseEvent"
            },
            {
              "description": "The job is in a failed state.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current state of the job.",
                  "enum": [
                    "failed"
                  ]
                },
                "errors": {
                  "type": "array",
                  "description": "A list of errors that caused the job to fail.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error_code": {
                        "type": "string",
                        "description": "The error code for the failure."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message for the failure"
                      },
                      "source": {
                        "type": "string",
                        "description": "The source file of the error, if applicable."
                      },
                      "url": {
                        "type": "string",
                        "description": "A URL related to an asset causing the failure(if any), if applicable."
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        "partialSuccessEvent": {
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseEvent"
            },
            {
              "description": "The job has succeeded with some non-critical errors.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current state of the job.",
                  "enum": [
                    "partial_success"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "The output response from the current state of the job."
                },
                "dataURL": {
                  "type": "string",
                  "description": "The data returned from the execution of the job. If the data size is between 250 KB and 20 MB, it will be provided as a pre-signed URL. If it is larger than 20 MB, the job will fail."
                },
                "outputs": {
                  "type": "object",
                  "description": "A list of URLs for all the successfully generated assets."
                },
                "errors": {
                  "type": "array",
                  "description": "A list of errors that occurred during a partially successful job.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error_code": {
                        "type": "string",
                        "description": "The error code for the partial failure."
                      },
                      "message": {
                        "type": "string",
                        "description": "The error message for the partial failure"
                      },
                      "source": {
                        "type": "string",
                        "description": "The source file of the partial failure error, if applicable."
                      },
                      "url": {
                        "type": "string",
                        "description": "A URL related to an asset causing the partial failure(if any), if applicable."
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        "Error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            }
          },
          "required": [
            "message",
            "error_code"
          ]
        },
        "InputAsset": {
          "type": "object",
          "description": "The URL where the asset is to be fetched.",
          "required": [
            "source"
          ],
          "properties": {
            "source": {
              "type": "object",
              "required": [
                "url"
              ],
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL of the asset."
                },
                "storageType": {
                  "type": "string",
                  "description": "This is an optional parameter, however IT IS RECOMMENDED to provide this information.",
                  "enum": [
                    "Azure",
                    "Dropbox"
                  ]
                }
              }
            },
            "destination": {
              "type": "string",
              "description": "This provides a path relative to a temporary base directory (working directory) where the resource would be downloaded. This would be used to identify the assets within the parameters. It cannot go up using '..' or '/'. Should be a valid file name."
            }
          }
        },
        "BaseJobRequest": {
          "description": "The base job request for any job.",
          "required": [
            "assets"
          ],
          "properties": {
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InputAsset"
              },
              "description": "Information about the assets, which will be used to process the job."
            },
            "params": {
              "type": "object",
              "properties": {
                "generalSettings": {
                  "description": "The general settings.",
                  "type": "object",
                  "properties": {
                    "fonts": {
                      "description": "The font settings.",
                      "type": "object",
                      "properties": {
                        "fontsDirectories": {
                          "description": "This lists the font directories for the input InDesign documents. \"Document Fonts\" in parallel to the document will continue to work even without specifying them.  <br></br> If none are specified, a temporary base directory (working directory) will be considered as a font directory.",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "This provides a path to a directory relative to a temporary base directory (working directory) where the fonts can be found. It cannot go up using '..' or '/'. Should be a valid path. For specifying a working directory, mention '.'."
                          }
                        }
                      }
                    },
                    "links": {
                      "description": "Settings related to links.",
                      "type": "object",
                      "properties": {
                        "replaceLinks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "targetDocument",
                              "mapping"
                            ],
                            "properties": {
                              "targetDocument": {
                                "description": "The document where the relinking is to be done.",
                                "type": "string"
                              },
                              "mapping": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "newAssetRelativePath"
                                  ],
                                  "properties": {
                                    "currentURI": {
                                      "type": "string",
                                      "description": "The existing URI of the link that needs relinking. If multiple links with this URI are found, all will be relinked. If `linkID is provided, this attribute will be ignored. Either `currentURI` or `linkID` should be present."
                                    },
                                    "linkID": {
                                      "type": "integer",
                                      "description": "The ID of the link which is to be relinked. If `currentURI` is also provided, it will be ignored. Either `currentURI` or `linkID` should be present."
                                    },
                                    "newAssetRelativePath": {
                                      "type": "string",
                                      "description": "This provides a path relative to a temporary base directory (working directory) where the asset to be linked to can be found. It cannot go up using '..' or '/'. Should be a valid file name."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "appLogs": {
                      "description": "Describes parameters regarding application logs.",
                      "type": "object",
                      "properties": {
                        "logsRelativePath": {
                          "type": "string",
                          "description": "This provides a path to a file, relative to the temporary base directory (working directory). This file is where the application's logs are to be dumped."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "OutputAsset": {
          "description": "The URL where the output assets are to be posted after the job is processed.",
          "type": "object",
          "required": [
            "destination",
            "source"
          ],
          "properties": {
            "destination": {
              "type": "object",
              "required": [
                "url"
              ],
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The URL of the asset."
                },
                "storageType": {
                  "type": "string",
                  "description": "This is an optional parameter, however IT IS RECOMMENDED to provide this information.",
                  "enum": [
                    "Azure",
                    "Dropbox"
                  ]
                }
              }
            },
            "source": {
              "type": "string",
              "description": "This provides a path relative of the output where the resource would be generated. It cannot go up using '..' or '/'. Should be a valid file name."
            }
          }
        },
        "BaseJobRequestWithOutput": {
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseJobRequest"
            },
            {
              "description": "The base job request for any job with the option to specify output URLs.",
              "type": "object",
              "properties": {
                "outputs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutputAsset"
                  }
                }
              }
            }
          ]
        }
      },
      "responses": {
        "BadParams": {
          "description": "Bad Parameter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "headers": {
            "Content-Type": {
              "schema": {
                "type": "string"
              },
              "description": "The format of the content returned (e.g., `application/json`)."
            },
            "Content-Length": {
              "schema": {
                "type": "integer"
              },
              "description": "The length of the response content."
            },
            "Access-Control-Allow-Origin": {
              "schema": {
                "type": "string"
              },
              "description": "The Cross Origin Resource Sharing (CORS) header."
            },
            "Access-Control-Allow-Methods": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates what HTTP methods are allowed."
            },
            "Access-Control-Allow-Headers": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates which HTTP headers can be used during the actual request."
            },
            "Access-Control-Allow-Credentials": {
              "schema": {
                "type": "string"
              },
              "description": "This header is used by servers to indicate that the client shall share HTTP responses."
            },
            "Access-Control-Max-Age": {
              "schema": {
                "type": "integer"
              },
              "description": "This indicates how long the results of a preflight request can be cached."
            }
          }
        },
        "Unauthorized": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "headers": {
            "Content-Type": {
              "schema": {
                "type": "string"
              },
              "description": "The format of the content returned (e.g., `application/json`)."
            },
            "Content-Length": {
              "schema": {
                "type": "integer"
              },
              "description": "The length of the response content."
            },
            "Access-Control-Allow-Origin": {
              "schema": {
                "type": "string"
              },
              "description": "The Cross Origin Resource Sharing (CORS) header."
            },
            "Access-Control-Allow-Methods": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates what HTTP methods are allowed."
            },
            "Access-Control-Allow-Headers": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates which HTTP headers can be used during the actual request."
            },
            "Access-Control-Allow-Credentials": {
              "schema": {
                "type": "string"
              },
              "description": "This header is used by servers to indicate that the client shall share HTTP responses."
            },
            "Access-Control-Max-Age": {
              "schema": {
                "type": "integer"
              },
              "description": "This indicates how long the results of a preflight request can be cached."
            }
          }
        },
        "Forbidden": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "headers": {
            "Content-Type": {
              "schema": {
                "type": "string"
              },
              "description": "The format of the content returned (e.g., `application/json`)."
            },
            "Content-Length": {
              "schema": {
                "type": "integer"
              },
              "description": "The length of the response content."
            },
            "Access-Control-Allow-Origin": {
              "schema": {
                "type": "string"
              },
              "description": "The Cross Origin Resource Sharing (CORS) header."
            },
            "Access-Control-Allow-Methods": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates what HTTP methods are allowed."
            },
            "Access-Control-Allow-Headers": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates which HTTP headers can be used during the actual request."
            },
            "Access-Control-Allow-Credentials": {
              "schema": {
                "type": "string"
              },
              "description": "This header is used by servers to indicate that the client shall share HTTP responses."
            },
            "Access-Control-Max-Age": {
              "schema": {
                "type": "integer"
              },
              "description": "This indicates how long the results of a preflight request can be cached."
            }
          }
        },
        "NotFound": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "headers": {
            "Content-Type": {
              "schema": {
                "type": "string"
              },
              "description": "The format of the content returned (e.g., `application/json`)."
            },
            "Content-Length": {
              "schema": {
                "type": "integer"
              },
              "description": "The length of the response content."
            },
            "Access-Control-Allow-Origin": {
              "schema": {
                "type": "string"
              },
              "description": "The Cross Origin Resource Sharing (CORS) header."
            },
            "Access-Control-Allow-Methods": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates what HTTP methods are allowed."
            },
            "Access-Control-Allow-Headers": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates which HTTP headers can be used during the actual request."
            },
            "Access-Control-Allow-Credentials": {
              "schema": {
                "type": "string"
              },
              "description": "This header is used by servers to indicate that the client shall share HTTP responses."
            },
            "Access-Control-Max-Age": {
              "schema": {
                "type": "integer"
              },
              "description": "This indicates how long the results of a preflight request can be cached."
            }
          }
        },
        "InternalServerError": {
          "description": "Internal Server Error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "headers": {
            "Content-Type": {
              "schema": {
                "type": "string"
              },
              "description": "The format of the content returned (e.g., `application/json`)."
            },
            "Content-Length": {
              "schema": {
                "type": "integer"
              },
              "description": "The length of the response content."
            },
            "Access-Control-Allow-Origin": {
              "schema": {
                "type": "string"
              },
              "description": "The Cross Origin Resource Sharing (CORS) header."
            },
            "Access-Control-Allow-Methods": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates what HTTP methods are allowed."
            },
            "Access-Control-Allow-Headers": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates which HTTP headers can be used during the actual request."
            },
            "Access-Control-Allow-Credentials": {
              "schema": {
                "type": "string"
              },
              "description": "This header is used by servers to indicate that the client shall share HTTP responses."
            },
            "Access-Control-Max-Age": {
              "schema": {
                "type": "integer"
              },
              "description": "This indicates how long the results of a preflight request can be cached."
            }
          }
        },
        "Accepted": {
          "description": "The job has been accepted for processing.",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "jobId": {
                    "type": "string",
                    "description": "ID"
                  },
                  "statusUrl": {
                    "type": "string",
                    "description": "Status URL"
                  }
                }
              }
            }
          },
          "headers": {
            "link": {
              "schema": {
                "type": "string"
              },
              "description": "status url for retry"
            },
            "retry-after": {
              "schema": {
                "type": "integer"
              },
              "description": "Number of seconds until the user should try again"
            },
            "Content-Type": {
              "schema": {
                "type": "string"
              },
              "description": "Type of content returned e.g. application/json"
            },
            "Content-Length": {
              "schema": {
                "type": "integer"
              },
              "description": "Length of response content"
            },
            "Access-Control-Allow-Origin": {
              "schema": {
                "type": "string"
              },
              "description": "Cross Origin Resource Sharing header"
            },
            "Access-Control-Allow-Methods": {
              "schema": {
                "type": "string"
              },
              "description": "Header indicates what HTTP methods are allowed"
            },
            "Access-Control-Allow-Headers": {
              "schema": {
                "type": "string"
              },
              "description": "Header indicate which HTTP headers can be used during the actual request"
            },
            "Access-Control-Allow-Credentials": {
              "schema": {
                "type": "string"
              },
              "description": "Header is used by servers to indicate that the client shall share HTTP responses"
            },
            "Access-Control-Max-Age": {
              "schema": {
                "type": "integer"
              },
              "description": "Header indicates how long the results of a preflight request"
            }
          }
        },
        "TooManyRequests": {
          "description": "Too Many Requests",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "headers": {
            "Content-Type": {
              "schema": {
                "type": "string"
              },
              "description": "The format of the content returned (e.g., `application/json`)."
            },
            "Content-Length": {
              "schema": {
                "type": "integer"
              },
              "description": "The length of the response content."
            },
            "Retry-After": {
                "schema": {
                "type": "integer"
                },
                "description": "The number of seconds until the user should try again."
            },
            "Access-Control-Allow-Origin": {
              "schema": {
                "type": "string"
              },
              "description": "The Cross Origin Resource Sharing (CORS) header."
            },
            "Access-Control-Allow-Methods": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates what HTTP methods are allowed."
            },
            "Access-Control-Allow-Headers": {
              "schema": {
                "type": "string"
              },
              "description": "This indicates which HTTP headers can be used during the actual request."
            },
            "Access-Control-Allow-Credentials": {
              "schema": {
                "type": "string"
              },
              "description": "This header is used by servers to indicate that the client shall share HTTP responses."
            },
            "Access-Control-Max-Age": {
              "schema": {
                "type": "integer"
              },
              "description": "This indicates how long the results of a preflight request can be cached."
            }
          }
        }
      }
    }
}

  