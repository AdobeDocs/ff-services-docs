"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[4061],{4564:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return c},default:function(){return u}});var t=a(58168),o=a(80045),s=(a(88763),a(15680)),r=a(83407);const i=["components"],c={},d=(p="CodeBlock",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.mdx)("div",e)});var p;const l={_frontmatter:c},m=r.A;function u(e){let{components:n}=e,a=(0,o.A)(e,i);return(0,s.mdx)(m,(0,t.A)({},l,a,{components:n,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"quickstart-guide"},"Quickstart Guide"),(0,s.mdx)("p",null,"Generate your first image with Firefly Services"),(0,s.mdx)("p",null,(0,s.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,s.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"100%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,s.mdx)("picture",{parentName:"span"},"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/5530d/cat-coding.webp 320w","/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/0c8fb/cat-coding.webp 640w","/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/94b1e/cat-coding.webp 1280w","/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/0b34d/cat-coding.webp 1920w","/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/96d48/cat-coding.webp 2048w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/8980b/cat-coding.jpg 320w","/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/56d4e/cat-coding.jpg 640w","/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/62aaf/cat-coding.jpg 1280w","/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/aaf92/cat-coding.jpg 1920w","/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/09658/cat-coding.jpg 2048w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/jpeg"}),"\n          ",(0,s.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/62aaf/cat-coding.jpg",alt:"an illustration of a cat coding on a laptop",title:"an illustration of a cat coding on a laptop",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,s.mdx)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.mdx)("h3",{id:"credentials"},"Credentials"),(0,s.mdx)("p",null,"If you don't already have a Firefly API or Firefly Services ",(0,s.mdx)("strong",{parentName:"p"},"Client ID")," and ",(0,s.mdx)("strong",{parentName:"p"},"Client Secret"),", retrieve them from your ",(0,s.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview"},"Adobe Developer Console project")," before reading further. ",(0,s.mdx)("strong",{parentName:"p"},"Securely store these credentials and never expose them in client-side or public code.")),(0,s.mdx)("h3",{id:"set-up-your-environment"},"Set Up Your Environment"),(0,s.mdx)("p",null,"Before we begin this tutorial, run the following in a secure terminal:"),(0,s.mdx)(d,{slots:"heading, code",repeat:"2",languages:"Python, JavaScript",mdxType:"CodeBlock"}),(0,s.mdx)("h4",{id:"javascript"},"JavaScript"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"mkdir firefly-api-generate-images-tutorial\ncd firefly-api-generate-images-tutorial\nnpm init --y\nnpm install axios qs\ntouch index.js\n")),(0,s.mdx)("h4",{id:"python"},"Python"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"mkdir firefly-api-generate-images-tutorial\ncd firefly-api-generate-images-tutorial\npython -m pip install requests\ntouch main.py\n")),(0,s.mdx)("p",null,"Depending on your learning style, you may prefer to walk through this tutorial step-by-step or ",(0,s.mdx)("a",{parentName:"p",href:"#full-example"},"jump immediately to the full source code"),"."),(0,s.mdx)("h2",{id:"retrieve-an-access-token"},"Retrieve an Access Token"),(0,s.mdx)("p",null,"Open a secure terminal and ",(0,s.mdx)("inlineCode",{parentName:"p"},"export")," your ",(0,s.mdx)("strong",{parentName:"p"},"Client ID")," and ",(0,s.mdx)("strong",{parentName:"p"},"Client Secret")," as environment variables so that your later commands can access them:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"export FIREFLY_SERVICES_CLIENT_ID=yourClientIdAsdf123\nexport FIREFLY_SERVICES_CLIENT_SECRET=yourClientSecretAsdf123\n")),(0,s.mdx)("p",null,"Generate an access token:"),(0,s.mdx)(d,{slots:"heading, code",repeat:"3",languages:"bash, Python, JavaScript",mdxType:"CodeBlock"}),(0,s.mdx)("h4",{id:"curl"},"cURL"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"curl --location 'https://ims-na1.adobelogin.com/ims/token/v3' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'grant_type=client_credentials' \\\n--data-urlencode \"client_id=$FIREFLY_SERVICES_CLIENT_ID\" \\\n--data-urlencode \"client_secret=$FIREFLY_SERVICES_CLIENT_SECRET\" \\\n--data-urlencode 'scope=openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n")),(0,s.mdx)("h4",{id:"python-1"},"Python"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},"def retrieve_access_token():\n    client_id = os.environ['FIREFLY_SERVICES_CLIENT_ID']\n    client_secret = os.environ['FIREFLY_SERVICES_CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    print(\"Access Token Retrieved\")\n    return token_data['access_token']\n")),(0,s.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},"async function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.FIREFLY_SERVICES_CLIENT_ID,\n    client_secret: process.env.FIREFLY_SERVICES_CLIENT_SECRET,\n    scope: 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Access Token Retrieved');\n    return response.data.access_token;\n  } catch (error) {\n    console.error('Error retrieving access token:', error.response.data);\n  }\n}\n")),(0,s.mdx)("p",null,"The response will look like this:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{"access_token":"yourAccessTokenAsdf123","token_type":"bearer","expires_in":86399}\n')),(0,s.mdx)("p",null,"Export this access token so that the next script can conveniently access it:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"export FIREFLY_SERVICES_ACCESS_TOKEN=yourAccessTokenAsdf123\n")),(0,s.mdx)("h2",{id:"generate-an-image"},"Generate an Image"),(0,s.mdx)("p",null,"Next, call the ",(0,s.mdx)("a",{parentName:"p",href:"./api/image_generation/V3/"},"Firefly Generate Images API"),":"),(0,s.mdx)(d,{slots:"heading, code",repeat:"3",languages:"bash, Python, JavaScript",mdxType:"CodeBlock"}),(0,s.mdx)("h4",{id:"curl-1"},"cURL"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"curl --location 'https://firefly-api.adobe.io/v3/images/generate' \\\n--header 'Content-Type: application/json' \\\n--header 'Accept: application/json' \\\n--header \"x-api-key: $FIREFLY_SERVICES_CLIENT_ID\" \\\n--header \"Authorization: Bearer $FIREFLY_SERVICES_ACCESS_TOKEN\" \\\n--data '{\n    \"prompt\": \"a realistic illustration of a cat coding\"\n}'\n")),(0,s.mdx)("h4",{id:"python-2"},"Python"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},"def generate_image(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['FIREFLY_SERVICES_CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'prompt': 'a realistic illustration of a cat coding',  # Replace with your actual prompt\n    }\n\n    response = requests.post(\n        'https://firefly-api.adobe.io/v3/images/generate',\n        headers=headers,\n        json=data\n    )\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Generate Image Response:\", job_response)\n    return job_response\n")),(0,s.mdx)("h4",{id:"javascript-2"},"JavaScript"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},'async function generateImage(accessToken) {\n  const headers = {\n    "Content-Type": "application/json",\n    Accept: "application/json",\n    "x-api-key": process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: `Bearer ${accessToken}`,\n  };\n\n  const data = {\n    prompt: "a realistic illustration of a cat coding", // Replace with your actual prompt\n  };\n\n  const config = {\n    method: "post",\n    url: "https://firefly-api.adobe.io/v3/images/generate",\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error("Error during generateImage:", error);\n  }\n}\n')),(0,s.mdx)("p",null,"The response will look like this:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "size": {\n        "width": 2048,\n        "height": 2048\n    },\n    "outputs": [\n        {\n            "seed": 1779323515,\n            "image": {\n                "url": "https://pre-signed-firefly-prod.s3-accelerate.amazonaws.com/images/asdf-12345?lots=of&query=params..."\n            }\n        }\n    ],\n    "contentClass": "art"\n}\n')),(0,s.mdx)("h2",{id:"view-the-generated-image"},"View the Generated Image"),(0,s.mdx)("p",null,"Open the URL in your browser to see the image you generated with Firefly 🎉"),(0,s.mdx)("h2",{id:"full-example"},"Full Example"),(0,s.mdx)("p",null,"You can review the ",(0,s.mdx)("a",{parentName:"p",href:"#prerequisites"},"prerequisites")," section to understand how to set up your environment prior to running this code. Note that this is an example only and is not production-ready and requires additional error handling, logging, security measures, and more before you can run it at scale in a live application."),(0,s.mdx)(d,{slots:"heading, code",repeat:"2",languages:"Python, JavaScript",mdxType:"CodeBlock"}),(0,s.mdx)("h4",{id:"python-3"},"Python"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},"import os\nimport requests\n\ndef main():\n    access_token = retrieve_access_token()\n    generate_image(access_token)\n\ndef retrieve_access_token():\n    client_id = os.environ['FIREFLY_SERVICES_CLIENT_ID']\n    client_secret = os.environ['FIREFLY_SERVICES_CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    print(\"Access Token Retrieved\")\n    return token_data['access_token']\n\ndef generate_image(access_token):\n    client_id = os.environ['FIREFLY_SERVICES_CLIENT_ID']\n\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': client_id,\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'prompt': 'a realistic illustration of a cat coding',  # Replace with your actual prompt\n    }\n\n    response = requests.post(\n        'https://firefly-api.adobe.io/v3/images/generate',\n        headers=headers,\n        json=data\n    )\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Generate Image Response:\", job_response)\n\n    # Access the generated image URL\n    image_url = job_response['outputs'][0]['image']['url']\n    print(f\"You can view the generated image at: {image_url}\")\n\nif __name__ == '__main__':\n    main()\n")),(0,s.mdx)("h4",{id:"javascript-3"},"JavaScript"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},"const axios = require('axios');\nconst qs = require('qs');\n\n(async () => {\n  const accessToken = await retrieveAccessToken();\n  await generateImage(accessToken);\n})();\n\nasync function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.FIREFLY_SERVICES_CLIENT_ID,\n    client_secret: process.env.FIREFLY_SERVICES_CLIENT_SECRET,\n    scope: 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Access Token Retrieved');\n    return response.data.access_token;\n  } catch (error) {\n    console.error('Error retrieving access token:', error.response.data);\n  }\n}\n\nasync function generateImage(accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: `Bearer ${accessToken}`,\n  };\n\n  const data = {\n    prompt: 'a realistic illustration of a cat coding', // Replace with your actual prompt\n  };\n\n  const config = {\n    method: 'post',\n    url: 'https://firefly-api.adobe.io/v3/images/generate',\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Generate Image Response:', response.data);\n\n    // Access the generated image URL\n    const imageUrl = response.data.outputs[0].image.url;\n    console.log(`You can view the generated image at: ${imageUrl}`);\n  } catch (error) {\n    console.error('Error during generateImage:', error.response.data);\n  }\n}\n")),(0,s.mdx)("h2",{id:"deepen-your-understanding"},"Deepen Your Understanding"),(0,s.mdx)("p",null,"Visit the ",(0,s.mdx)("a",{parentName:"p",href:"./how-tos/firefly-generate-image-api-tutorial.md"},"Firefly Generate Image API tutorial")," to learn more about the rich customization options available to you 🚀"))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-firefly-api-guides-index-md-383d48f900db16b95923.js.map