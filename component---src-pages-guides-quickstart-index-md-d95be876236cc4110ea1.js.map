{"version":3,"file":"component---src-pages-guides-quickstart-index-md-d95be876236cc4110ea1.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/quickstart/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ff-services-docs/ff-services-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart-guide\"\n    }}>{`Quickstart Guide`}</h1>\n    <p>{`Automating Content Workflows with Firefly Services APIs`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><span parentName=\"td\" {...{\n              \"className\": \"gatsby-resp-image-wrapper\",\n              \"style\": {\n                \"position\": \"relative\",\n                \"display\": \"block\",\n                \"marginLeft\": \"auto\",\n                \"marginRight\": \"auto\",\n                \"maxWidth\": \"1280px\"\n              }\n            }}>{`\n      `}<span parentName=\"span\" {...{\n                \"className\": \"gatsby-resp-image-background-image\",\n                \"style\": {\n                  \"paddingBottom\": \"75.625%\",\n                  \"position\": \"relative\",\n                  \"bottom\": \"0\",\n                  \"left\": \"0\",\n                  \"display\": \"block\",\n                  \"transition\": \"opacity 0.5s 0.5s\",\n                  \"pointerEvents\": \"none\"\n                }\n              }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/5530d/original.webp 320w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/0c8fb/original.webp 640w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/94b1e/original.webp 1280w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/0b34d/original.webp 1920w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/d5269/original.webp 2560w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/238ba/original.webp 3874w\"],\n                  \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n                  \"type\": \"image/webp\"\n                }}></source>{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/8980b/original.jpg 320w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/56d4e/original.jpg 640w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/62aaf/original.jpg 1280w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/aaf92/original.jpg 1920w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/36eba/original.jpg 2560w\", \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/d954d/original.jpg 3874w\"],\n                  \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n                  \"type\": \"image/jpeg\"\n                }}></source>{`\n          `}<img parentName=\"picture\" {...{\n                  \"className\": \"gatsby-resp-image-image\",\n                  \"src\": \"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/62aaf/original.jpg\",\n                  \"alt\": \"a picture of a burger with a black background\",\n                  \"title\": \"a picture of a burger with a black background\",\n                  \"loading\": \"lazy\",\n                  \"style\": {\n                    \"width\": \"100%\",\n                    \"height\": \"100%\",\n                    \"margin\": \"0\",\n                    \"verticalAlign\": \"middle\",\n                    \"position\": \"absolute\",\n                    \"opacity\": \"0\",\n                    \"transition\": \"opacity 0.5s\",\n                    \"color\": \"inherit\",\n                    \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                    \"top\": \"0\",\n                    \"left\": \"0\"\n                  }\n                }}></img>{`\n        `}</picture>{`\n    `}</span>{` `}<p style={{\n              \"textAlign\": \"center\"\n            }}>{`Original Image`}</p></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><span parentName=\"td\" {...{\n              \"className\": \"gatsby-resp-image-wrapper\",\n              \"style\": {\n                \"position\": \"relative\",\n                \"display\": \"block\",\n                \"marginLeft\": \"auto\",\n                \"marginRight\": \"auto\",\n                \"maxWidth\": \"1280px\"\n              }\n            }}>{`\n      `}<span parentName=\"span\" {...{\n                \"className\": \"gatsby-resp-image-background-image\",\n                \"style\": {\n                  \"paddingBottom\": \"77.8125%\",\n                  \"position\": \"relative\",\n                  \"bottom\": \"0\",\n                  \"left\": \"0\",\n                  \"display\": \"block\",\n                  \"transition\": \"opacity 0.5s 0.5s\",\n                  \"pointerEvents\": \"none\"\n                }\n              }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/5530d/output.webp 320w\", \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/0c8fb/output.webp 640w\", \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/94b1e/output.webp 1280w\", \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/0b34d/output.webp 1920w\", \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/4589a/output.webp 2304w\"],\n                  \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n                  \"type\": \"image/webp\"\n                }}></source>{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/8980b/output.jpg 320w\", \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/56d4e/output.jpg 640w\", \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/62aaf/output.jpg 1280w\", \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/aaf92/output.jpg 1920w\", \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/0e09b/output.jpg 2304w\"],\n                  \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n                  \"type\": \"image/jpeg\"\n                }}></source>{`\n          `}<img parentName=\"picture\" {...{\n                  \"className\": \"gatsby-resp-image-image\",\n                  \"src\": \"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/62aaf/output.jpg\",\n                  \"alt\": \"a picture of a burger with a fiery background and enhanced lighting\",\n                  \"title\": \"a picture of a burger with a fiery background and enhanced lighting\",\n                  \"loading\": \"lazy\",\n                  \"style\": {\n                    \"width\": \"100%\",\n                    \"height\": \"100%\",\n                    \"margin\": \"0\",\n                    \"verticalAlign\": \"middle\",\n                    \"position\": \"absolute\",\n                    \"opacity\": \"0\",\n                    \"transition\": \"opacity 0.5s\",\n                    \"color\": \"inherit\",\n                    \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                    \"top\": \"0\",\n                    \"left\": \"0\"\n                  }\n                }}></img>{`\n        `}</picture>{`\n    `}</span>{` `}<p style={{\n              \"textAlign\": \"center\"\n            }}>{`Output Image`}</p></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`In this tutorial, let's imagine we are working for a creative marketing team at a gourmet food chain specializing in premium burgers. Our goal is to develop a visually stunning online menu and promotional materials that highlight the mouthwatering appeal of our products to customers worldwide. We will leverage Adobe's Firefly Services APIs to automate our content workflow:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Remove Backgrounds:`}</strong>{` Use the Photoshop API to eliminate distracting backgrounds from our product images, allowing the items to stand out.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Enhance Images with Generative Fill:`}</strong>{` Apply the Firefly Fill Image API to add creative and contextually relevant backgrounds that enhance the aesthetic appeal of each product.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Optimize Image Quality:`}</strong>{` Utilize the Lightroom Auto Tone API to automatically adjust lighting and color balance, ensuring consistent and professional-quality images across our catalog.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`If you don't already have a Photoshop, Firefly, and Lightroom `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{`, retrieve them from your `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview\"\n      }}>{`Adobe Developer Console project`}</a>{` before reading further. `}<strong parentName=\"p\">{`Securely store these credentials and never expose them in client-side or public code.`}</strong></p>\n    <p>{`Pre-signed URLs:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A pre-signed URL with a read token for the input assets.`}</li>\n      <li parentName=\"ul\">{`A pre-signed URL with a read/write token for the output assets.`}</li>\n    </ul>\n    <p>{`For more details about pre-signed URLs, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html\"\n      }}>{`AWS Sharing objects with presigned URLs`}</a>{`, or `}<a parentName=\"p\" {...{\n        \"href\": \"https://learn.microsoft.com/en-us/azure/storage/common/storage-sas-overview\"\n      }}>{`Azure Storage resources using shared access signatures`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-an-access-token\"\n    }}>{`Retrieve an Access Token`}</h2>\n    <p>{`Open a secure terminal and `}<inlineCode parentName=\"p\">{`export`}</inlineCode>{` your `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{` as environment variables so that your later commands can access them:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export FIREFLY_SERVICES_CLIENT_ID=yourClientIdAsdf123\nexport FIREFLY_SERVICES_CLIENT_SECRET=yourClientSecretAsdf123\n`}</code></pre>\n    <p>{`Generate an access token:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\\\n--data-urlencode 'grant_type=client_credentials' \\\\\n--data-urlencode \"client_id=$FIREFLY_SERVICES_CLIENT_ID\" \\\\\n--data-urlencode \"client_secret=$FIREFLY_SERVICES_CLIENT_SECRET\" \\\\\n--data-urlencode 'scope=openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def retrieve_access_token():\n    client_id = os.environ['FIREFLY_SERVICES_CLIENT_ID']\n    client_secret = os.environ['FIREFLY_SERVICES_CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    print(\"Access Token Retrieved\")\n    return token_data['access_token']\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.FIREFLY_SERVICES_CLIENT_ID,\n    client_secret: process.env.FIREFLY_SERVICES_CLIENT_SECRET,\n    scope: 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Access Token Retrieved');\n    return response.data.access_token;\n  } catch (error) {\n    console.error('Error retrieving access token:', error.response.data);\n  }\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\"access_token\":\"yourAccessTokenAsdf123\",\"token_type\":\"bearer\",\"expires_in\":86399}\n`}</code></pre>\n    <p>{`Export this access token in your secure terminal so that the next script can conveniently access it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export FIREFLY_SERVICES_ACCESS_TOKEN=yourAccessTokenAsdf123\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"remove-background---photoshop-api\"\n    }}>{`Remove Background - Photoshop API`}</h2>\n    <p>{`Next, call the `}<a parentName=\"p\" {...{\n        \"href\": \"../../photoshop/api/photoshop_removeBackground.md\"\n      }}>{`Photoshop Remove Background API`}</a>{`:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl-1\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://image.adobe.io/sensei/cutout' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"x-api-key: $FIREFLY_SERVICES_CLIENT_ID\" \\\\\n--header \"Authorization: Bearer $FIREFLY_SERVICES_ACCESS_TOKEN\" \\\\\n--data '{\n    \"input\":{\n      \"href\":\"https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...\",\n      \"storage\":\"azure\"\n    },\n    \"output\":{\n      \"href\":\"https://demo.blob.core.windows.net:443/container/output.jpeg?sv...&query=params...\",\n      \"storage\":\"azure\"\n    }\n  }'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-1\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Replace with your actual pre-signed URLs and storage option\nSIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'\nSIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'\nSTORAGE = 'azure'  # e.g., 'external', 'azure'\n\ndef remove_background(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['FIREFLY_SERVICES_CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'input': {\n            'href': SIGNED_GET_URL,\n            'storage': STORAGE\n        },\n        'output': {\n            'href': SIGNED_POST_URL,\n            'storage': STORAGE\n        }\n    }\n\n    response = requests.post('https://image.adobe.io/sensei/cutout', headers=headers, json=data)\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Remove Background Job Submitted:\", job_response)\n    return job_response\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const SIGNED_GET_URL = \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\";\nconst SIGNED_POST_URL = \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\";\nconst STORAGE = \"azure\"; // e.g., 'external', 'azure'\n\nasync function removeBackground(accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    input: { href: SIGNED_GET_URL, storage: STORAGE },\n    output: { href: SIGNED_POST_URL, storage: STORAGE },\n  };\n\n  const config = {\n    method: 'post',\n    url: 'https://image.adobe.io/sensei/cutout',\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Remove Background Job Submitted:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error during removeBackground:', error.response.data);\n  }\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"https://image.adobe.io/sensei/status/<:jobId>\"\n    }\n  }\n}\n`}</code></pre>\n    <p>{`Wait for a success status of this job. A sample of this is provided in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../photoshop/quickstart/index.md#get-status---mask\"\n      }}>{`Photoshop Quickstart Guide`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"fill-image---firefly-api\"\n    }}>{`Fill Image - Firefly API`}</h2>\n    <p>{`Next, call the `}<a parentName=\"p\" {...{\n        \"href\": \"../../firefly-api/guides/api/generative_fill/V3_Async/index.md\"\n      }}>{`Firefly Fill Image API`}</a>{`:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl-2\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://firefly-api.adobe.io/v3/images/fill-async' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"x-api-key: $FIREFLY_SERVICES_CLIENT_ID\" \\\\\n--header \"Authorization: Bearer $FIREFLY_SERVICES_ACCESS_TOKEN\" \\\\\n--data '{\n    \"prompt\": \"A delicious firey background\",\n    \"image\": {\n        \"source\": {\n            \"url\": \"https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...\",\n        }\n    },\n    \"mask\": {\n        \"source\": {\n            \"url\": \"https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...\",\n        }\n    }\n}'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-2\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Replace with your actual pre-signed URLs\nSIGNED_IMAGE_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'  # Image URL\nSIGNED_MASK_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'    # Mask URL\n\ndef fill_image(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['FIREFLY_SERVICES_CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'prompt': 'a description of the desired background',  # Replace with your actual prompt\n        'image': {\n            'source': {\n                'url': SIGNED_IMAGE_GET_URL\n            }\n        },\n        'mask': {\n            'source': {\n                'url': SIGNED_MASK_GET_URL\n            }\n        }\n    }\n\n    response = requests.post(\n        'https://firefly-api.adobe.io/v3/images/fill-async',\n        headers=headers,\n        json=data\n    )\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Fill Image Job Submitted:\", job_response)\n    return job_response\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-2\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const SIGNED_IMAGE_GET_URL = 'https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...'; // Replace with your image URL\nconst SIGNED_MASK_GET_URL = 'https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...';  // Replace with your mask URL\n\nasync function fillImage(accessToken) {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"x-api-key\": process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    prompt: \"A delicious firey background\", // Replace with your actual prompt\n    image: {\n      source: {\n        url: SIGNED_IMAGE_GET_URL,\n      },\n    },\n    mask: {\n      source: {\n        url: SIGNED_MASK_GET_URL,\n      },\n    },\n  };\n\n  const config = {\n    method: \"post\",\n    url: \"https://firefly-api.adobe.io/v3/images/fill-async\",\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error during fillImage:\", error);\n  }\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"jobId\": \"urn:ff:jobs:eso851211:86ffe2ea-d765-4bd3-b2fd-1111\",\n  \"statusUrl\": \"https://firefly-api.adobe.io/v3/status/urn:ff:jobs:eso851211:86ffe2ea-d765-4bd3-b2fd-1111\",\n  \"cancelUrl\": \"https://firefly-api.adobe.io/v3/cancel/urn:ff:jobs:eso851211:86ffe2ea-d765-4bd3-b2fd-1111\"\n}\n`}</code></pre>\n    <p>{`Wait for a success status of this job. A sample of this is provided in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../firefly-api/guides/how-tos/using-async-apis.md#generating-images-with-the-async-api\"\n      }}>{`Firefly API Tutorials`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"auto-tone---lightroom-api\"\n    }}>{`Auto Tone - Lightroom API`}</h2>\n    <p>{`Next, call the `}<a parentName=\"p\" {...{\n        \"href\": \"../../lightroom/api/lightroom_autoTone.md\"\n      }}>{`Lightroom Auto Tone API`}</a>{`:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl-3\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://image.adobe.io/lrService/autoTone' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"x-api-key: $FIREFLY_SERVICES_CLIENT_ID\" \\\\\n--header \"Authorization: Bearer $FIREFLY_SERVICES_ACCESS_TOKEN\" \\\\\n--data '{\n    \"inputs\":{\n      \"href\":\"https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...\",\n      \"storage\":\"azure\"\n    },\n    \"outputs\":[{\n      \"href\":\"https://demo.blob.core.windows.net:443/container/output.jpeg?sv...&query=params...\",\n      \"storage\":\"azure\",\n      \"type\":\"image/jpeg\"\n    }]\n  }'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-3\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Replace with your actual pre-signed URLs and storage option\nSIGNED_GET_URL = 'https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...'\nSIGNED_POST_URL = 'https://demo.blob.core.windows.net:443/container/output.jpeg?sv...&query=params...'\nstorage = 'azure'  # e.g., 'external', 'azure'\n\ndef auto_tone(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['FIREFLY_SERVICES_CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'inputs': {\n            'href': SIGNED_GET_URL,\n            'storage': STORAGE\n        },\n        'outputs': [{\n            'href': SIGNED_POST_URL,\n            'storage': STORAGE,\n            'type': 'image/jpeg'\n        }]\n    }\n\n    response = requests.post('https://image.adobe.io/lrService/autoTone', headers=headers, json=data)\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Auto Tone Job Submitted:\", job_response)\n    return job_response\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-3\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{` const SIGNED_GET_URL = \"https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...\";\n  const SIGNED_POST_URL = \"https://demo.blob.core.windows.net:443/container/output.jpeg?sv...&query=params...\";\n  const STORAGE = \"azure\"; // e.g., 'external', 'azure'\n\nasync function autoTone(accessToken) {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"x-api-key\": process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    inputs: {\n      href: SIGNED_GET_URL,\n      storage: storage,\n    },\n    outputs: [\n      {\n        href: SIGNED_POST_URL,\n        storage: storage,\n        type: \"image/jpeg\",\n      },\n    ],\n  };\n\n  const config = {\n    method: \"post\",\n    url: \"https://image.adobe.io/lrService/autoTone\",\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error during autoTone:\", error);\n  }\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"https://image.adobe.io/lrService/status/<:jobId>\"\n    }\n  }\n}\n`}</code></pre>\n    <p>{`Wait for a success status of this job. A sample of this is provided in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../lightroom/quickstart/index.md#get-status\"\n      }}>{`Lightroom API Quickstart Guide`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"view-final-image\"\n    }}>{`View Final Image`}</h2>\n    <p>{`Access the final at the `}<inlineCode parentName=\"p\">{`outputs[0]._links.self.href`}</inlineCode>{` URL (the `}<inlineCode parentName=\"p\">{`SIGNED_POST_URL`}</inlineCode>{` provided earlier). 🎉`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","CodeBlock","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","style","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}