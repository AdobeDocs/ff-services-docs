{"version":3,"file":"component---src-pages-firefly-api-guides-concepts-authentication-index-md-dd0c38136c79a8c1fdf8.js","mappings":"0TAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,kBACJ,mBACJA,EAAAA,EAAAA,KAAA,SAAI,+CACJA,EAAAA,EAAAA,KAACL,EAAW,CAACgB,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjDV,EAAAA,EAAAA,KAAA,SAAI,kGAAgGA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC9G,KAAQ,+GACN,mCAAuC,6BAA4Bb,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,2FACjGb,EAAAA,EAAAA,KAAA,MACE,GAAM,YACJ,aACJA,EAAAA,EAAAA,KAAA,SAAI,yKAAwKA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACtL,KAAQ,+IACN,0CAA8C,gDACpDb,EAAAA,EAAAA,KAAA,MACE,GAAM,4BACJ,6BACJA,EAAAA,EAAAA,KAAA,SAAI,sCAAqCA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,UAAuB,gHAC5Fb,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,iBACX,sHAGNb,EAAAA,EAAAA,KAAA,SAAI,iEACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,iBACX,wZAONb,EAAAA,EAAAA,KAAA,SAAI,sCACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,iBACX,+EAENb,EAAAA,EAAAA,KAAA,SAAI,wCAAuCA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,cAA2B,+RAClGb,EAAAA,EAAAA,KAAA,SAAI,iEAAgEA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC9E,KAAQ,kBACN,oBAAwB,kCAGlC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/firefly-api/guides/concepts/authentication/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ff-services-docs/ff-services-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h1>\n    <p>{`Learn how to make requests to Firefly APIs`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If you don't already have a Firefly \"client ID\" and \"client secret\", retrieve them from your `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview\"\n      }}>{`Adobe Developer Console project`}</a>{` before reading further. `}<strong parentName=\"p\">{`Securely store these credentials and never expose them in client-side or public code.`}</strong></p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Every request made to Firefly APIs must include an encrypted access token. Your secure, server-side application retrieves an access token by making a request to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.com/content/dam/cc/en/trust-center/ungated/whitepapers/corporate/adobe-identity-management-services-security-overview.pdf\"\n      }}>{`Adobe Identity Management System (IMS)`}</a>{` with your \"client ID\" and \"client secret\".`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-an-access-token\"\n    }}>{`Retrieve an access token`}</h2>\n    <p>{`First, open a secure terminal and `}<inlineCode parentName=\"p\">{`export`}</inlineCode>{` your \"client ID\" and \"client secret\" as environment variables so that your later commands can access them:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export FIREFLY_CLIENT_ID=PASTE_YOUR_CLIENT_ID_HERE\nexport FIREFLY_CLIENT_SECRET=PASTE_YOUR_CLIENT_SECRET_HERE\n`}</code></pre>\n    <p>{`Next, run the following command to generate an access token:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\\\n--data-urlencode 'grant_type=client_credentials' \\\\\n--data-urlencode \"client_id=$FIREFLY_CLIENT_ID\" \\\\\n--data-urlencode \"client_secret=$FIREFLY_CLIENT_SECRET\" \\\\\n--data-urlencode 'scope=openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\"access_token\":\"asdf...1234\",\"token_type\":\"bearer\",\"expires_in\":86399}\n`}</code></pre>\n    <p>{`Notice how the response includes an `}<inlineCode parentName=\"p\">{`expires_in`}</inlineCode>{` field, which informs you of how many more seconds the access token is valid for. Each access token is valid for 24 hours, after which your secure server-side application will need to request a new token. A best practice is securely store the token and refresh it before it expires.`}</p>\n    <p>{`Now that you are retrieving an access token, hop over to the `}<a parentName=\"p\" {...{\n        \"href\": \"../../index.md\"\n      }}>{`Quickstart Guide`}</a>{` to generate your first image!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}