{"version":3,"file":"component---src-pages-lightroom-quickstart-index-md-7638732c9f76e3eaf9a8.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/lightroom/quickstart/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ff-services-docs/ff-services-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart-guide\"\n    }}>{`Quickstart Guide`}</h1>\n    <p>{`Modify your first Image with Lightroom APIs`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><span parentName=\"td\" {...{\n              \"className\": \"gatsby-resp-image-wrapper\",\n              \"style\": {\n                \"position\": \"relative\",\n                \"display\": \"block\",\n                \"marginLeft\": \"auto\",\n                \"marginRight\": \"auto\",\n                \"maxWidth\": \"707px\"\n              }\n            }}>{`\n      `}<span parentName=\"span\" {...{\n                \"className\": \"gatsby-resp-image-background-image\",\n                \"style\": {\n                  \"paddingBottom\": \"150%\",\n                  \"position\": \"relative\",\n                  \"bottom\": \"0\",\n                  \"left\": \"0\",\n                  \"display\": \"block\",\n                  \"transition\": \"opacity 0.5s 0.5s\",\n                  \"pointerEvents\": \"none\"\n                }\n              }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/5530d/autostraighten-input.webp 320w\", \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/0c8fb/autostraighten-input.webp 640w\", \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/36466/autostraighten-input.webp 707w\"],\n                  \"sizes\": \"(max-width: 707px) 100vw, 707px\",\n                  \"type\": \"image/webp\"\n                }}></source>{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/8980b/autostraighten-input.jpg 320w\", \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/56d4e/autostraighten-input.jpg 640w\", \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/3bf56/autostraighten-input.jpg 707w\"],\n                  \"sizes\": \"(max-width: 707px) 100vw, 707px\",\n                  \"type\": \"image/jpeg\"\n                }}></source>{`\n          `}<img parentName=\"picture\" {...{\n                  \"className\": \"gatsby-resp-image-image\",\n                  \"src\": \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/3bf56/autostraighten-input.jpg\",\n                  \"alt\": \"a crooked picture of a watch tower\",\n                  \"title\": \"a crooked picture of a watch tower\",\n                  \"loading\": \"lazy\",\n                  \"style\": {\n                    \"width\": \"100%\",\n                    \"height\": \"100%\",\n                    \"margin\": \"0\",\n                    \"verticalAlign\": \"middle\",\n                    \"position\": \"absolute\",\n                    \"opacity\": \"0\",\n                    \"transition\": \"opacity 0.5s\",\n                    \"color\": \"inherit\",\n                    \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                    \"top\": \"0\",\n                    \"left\": \"0\"\n                  }\n                }}></img>{`\n        `}</picture>{`\n    `}</span>{` `}<p style={{\n              \"textAlign\": \"center\"\n            }}>{`Image`}</p></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><span parentName=\"td\" {...{\n              \"className\": \"gatsby-resp-image-wrapper\",\n              \"style\": {\n                \"position\": \"relative\",\n                \"display\": \"block\",\n                \"marginLeft\": \"auto\",\n                \"marginRight\": \"auto\",\n                \"maxWidth\": \"541px\"\n              }\n            }}>{`\n      `}<span parentName=\"span\" {...{\n                \"className\": \"gatsby-resp-image-background-image\",\n                \"style\": {\n                  \"paddingBottom\": \"150%\",\n                  \"position\": \"relative\",\n                  \"bottom\": \"0\",\n                  \"left\": \"0\",\n                  \"display\": \"block\",\n                  \"transition\": \"opacity 0.5s 0.5s\",\n                  \"pointerEvents\": \"none\"\n                }\n              }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/a0b78c7a2dd66bbd0ba5ffdb9c2975b2/5530d/autostraighten-output.webp 320w\", \"/ff-services-docs/static/a0b78c7a2dd66bbd0ba5ffdb9c2975b2/9db5b/autostraighten-output.webp 541w\"],\n                  \"sizes\": \"(max-width: 541px) 100vw, 541px\",\n                  \"type\": \"image/webp\"\n                }}></source>{`\n          `}<source parentName=\"picture\" {...{\n                  \"srcSet\": [\"/ff-services-docs/static/a0b78c7a2dd66bbd0ba5ffdb9c2975b2/dd4a7/autostraighten-output.png 320w\", \"/ff-services-docs/static/a0b78c7a2dd66bbd0ba5ffdb9c2975b2/a010c/autostraighten-output.png 541w\"],\n                  \"sizes\": \"(max-width: 541px) 100vw, 541px\",\n                  \"type\": \"image/png\"\n                }}></source>{`\n          `}<img parentName=\"picture\" {...{\n                  \"className\": \"gatsby-resp-image-image\",\n                  \"src\": \"/ff-services-docs/static/a0b78c7a2dd66bbd0ba5ffdb9c2975b2/a010c/autostraighten-output.png\",\n                  \"alt\": \"a straightened picture of a watch tower\",\n                  \"title\": \"a straightened picture of a watch tower\",\n                  \"loading\": \"lazy\",\n                  \"style\": {\n                    \"width\": \"100%\",\n                    \"height\": \"100%\",\n                    \"margin\": \"0\",\n                    \"verticalAlign\": \"middle\",\n                    \"position\": \"absolute\",\n                    \"opacity\": \"0\",\n                    \"transition\": \"opacity 0.5s\",\n                    \"color\": \"inherit\",\n                    \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                    \"top\": \"0\",\n                    \"left\": \"0\"\n                  }\n                }}></img>{`\n        `}</picture>{`\n    `}</span>{` `}<p style={{\n              \"textAlign\": \"center\"\n            }}>{`Straightened Image`}</p></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <h3 {...{\n      \"id\": \"credentials\"\n    }}>{`Credentials`}</h3>\n    <p>{`If you don't already have a Lightroom or a Firefly Services `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{`, retrieve them from your `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview\"\n      }}>{`Adobe Developer Console project`}</a>{` before reading further. `}<strong parentName=\"p\">{`Securely store these credentials and never expose them in client-side or public code.`}</strong></p>\n    <h3 {...{\n      \"id\": \"set-up-your-environment\"\n    }}>{`Set Up Your Environment`}</h3>\n    <p>{`Before we begin this tutorial, run the following in a secure terminal:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir lightroom-api-auto-straighten-tutorial\ncd lightroom-api-auto-straighten-tutorial\nnpm init --y\nnpm install axios qs\ntouch index.js\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir lightroom-api-auto-straighten-tutorial\ncd lightroom-api-auto-straighten-tutorial\npython -m pip install requests\ntouch main.py\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"pre-signed-urls\"\n    }}>{`Pre-signed URLs`}</h3>\n    <p>{`To interact with Adobe's Lightroom APIs, you'll need to generate pre-signed URLs. These URLs grant temporary access to your storage resources without exposing your credentials. For more details about pre-signed URLs, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html\"\n      }}>{`AWS Sharing objects with presigned URLs`}</a>{`, or `}<a parentName=\"p\" {...{\n        \"href\": \"https://learn.microsoft.com/en-us/azure/storage/common/storage-sas-overview\"\n      }}>{`Azure Storage resources using shared access signatures`}</a>{`.`}</p>\n    <p>{`In this tutorial, you will need:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A pre-signed URL with a read token for the input image. Save this sample image to your cloud storage and generate a pre-signed URL: `}<span parentName=\"li\" {...{\n          \"className\": \"gatsby-resp-image-wrapper\",\n          \"style\": {\n            \"position\": \"relative\",\n            \"display\": \"block\",\n            \"marginLeft\": \"auto\",\n            \"marginRight\": \"auto\",\n            \"maxWidth\": \"707px\"\n          }\n        }}>{`\n      `}<span parentName=\"span\" {...{\n            \"className\": \"gatsby-resp-image-background-image\",\n            \"style\": {\n              \"paddingBottom\": \"150%\",\n              \"position\": \"relative\",\n              \"bottom\": \"0\",\n              \"left\": \"0\",\n              \"display\": \"block\",\n              \"transition\": \"opacity 0.5s 0.5s\",\n              \"pointerEvents\": \"none\"\n            }\n          }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n              \"srcSet\": [\"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/5530d/autostraighten-input.webp 320w\", \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/0c8fb/autostraighten-input.webp 640w\", \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/36466/autostraighten-input.webp 707w\"],\n              \"sizes\": \"(max-width: 707px) 100vw, 707px\",\n              \"type\": \"image/webp\"\n            }}></source>{`\n          `}<source parentName=\"picture\" {...{\n              \"srcSet\": [\"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/8980b/autostraighten-input.jpg 320w\", \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/56d4e/autostraighten-input.jpg 640w\", \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/3bf56/autostraighten-input.jpg 707w\"],\n              \"sizes\": \"(max-width: 707px) 100vw, 707px\",\n              \"type\": \"image/jpeg\"\n            }}></source>{`\n          `}<img parentName=\"picture\" {...{\n              \"className\": \"gatsby-resp-image-image\",\n              \"src\": \"/ff-services-docs/static/58e9a6689a1a1f59062d1db15c1be01e/3bf56/autostraighten-input.jpg\",\n              \"alt\": \"a crooked picture of a watch tower\",\n              \"title\": \"a crooked picture of a watch tower\",\n              \"loading\": \"lazy\",\n              \"style\": {\n                \"width\": \"100%\",\n                \"height\": \"100%\",\n                \"margin\": \"0\",\n                \"verticalAlign\": \"middle\",\n                \"position\": \"absolute\",\n                \"opacity\": \"0\",\n                \"transition\": \"opacity 0.5s\",\n                \"color\": \"inherit\",\n                \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                \"top\": \"0\",\n                \"left\": \"0\"\n              }\n            }}></img>{`\n        `}</picture>{`\n    `}</span></li>\n      <li parentName=\"ul\">{`A pre-signed URL with a read/write token for the modified image.`}</li>\n    </ul>\n    <p>{`Depending on your learning style, you may prefer to walk through this tutorial step-by-step or `}<a parentName=\"p\" {...{\n        \"href\": \"#full-example\"\n      }}>{`jump immediately to the full source code`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-an-access-token\"\n    }}>{`Retrieve an Access Token`}</h2>\n    <p>{`Open a secure terminal and `}<inlineCode parentName=\"p\">{`export`}</inlineCode>{` your `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{` as environment variables so that your later commands can access them:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export CLIENT_ID=yourClientIdAsdf123\nexport CLIENT_SECRET=yourClientSecretAsdf123\n`}</code></pre>\n    <p>{`Generate an access token:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\\\n--data-urlencode 'grant_type=client_credentials' \\\\\n--data-urlencode \"client_id=$CLIENT_ID\" \\\\\n--data-urlencode \"client_secret=$CLIENT_SECRET\" \\\\\n--data-urlencode 'scope=openid,AdobeID,read_organizations'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-1\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def retrieve_access_token():\n    client_id = os.environ['CLIENT_ID']\n    client_secret = os.environ['CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,read_organizations'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    return token_data\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.CLIENT_ID,\n    client_secret: process.env.CLIENT_SECRET,\n    scope: 'openid,AdobeID,read_organizations',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  const response = await axios.request(config);\n  return response.data;\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\"access_token\":\"yourAccessTokenAsdf123\",\"token_type\":\"bearer\",\"expires_in\":86399}\n`}</code></pre>\n    <p>{`Export this access token in your secure terminal so that the next script can conveniently access it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export ACCESS_TOKEN=yourAccessTokenAsdf123\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"auto-straighten\"\n    }}>{`Auto Straighten`}</h2>\n    <p>{`Next, call the `}<a parentName=\"p\" {...{\n        \"href\": \"../api/lightroom_autoStraighten.md\"\n      }}>{`Lightroom Auto Straighten API`}</a>{`:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl-1\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://image.adobe.io/lrService/autoStraighten' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"x-api-key: $LIGHTROOM_CLIENT_ID\" \\\\\n--header \"Authorization: Bearer $LIGHTROOM_ACCESS_TOKEN\" \\\\\n--data '{\n    \"inputs\":{\n      \"href\":\"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\",\n      \"storage\":\"azure\"\n    },\n    \"outputs\":[{\n      \"href\":\"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\",\n      \"storage\":\"azure\",\n      \"type\":\"image/jpeg\"\n    }]\n  }'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-2\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# Replace with your actual pre-signed URLs and storage option\nSIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'\nSIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'\nSTORAGE = 'azure'  # e.g., 'external', 'azure'\n\ndef auto_straighten(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'inputs': {\n            'href': SIGNED_GET_URL,\n            'storage': STORAGE\n        },\n        'outputs': [{\n            'href': SIGNED_POST_URL,\n            'storage': STORAGE,\n            'type': 'image/jpeg'\n        }]\n    }\n\n    response = requests.post('https://image.adobe.io/lrService/autoStraighten', headers=headers, json=data)\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Auto Straighten Job Submitted:\", job_response)\n    return job_response\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-2\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const SIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...';\nconst SIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...';\nconst STORAGE = 'azure';  //e.g., 'external', 'azure'\n\nasync function autoStraighten(accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    inputs: { href: SIGNED_GET_URL, storage: STORAGE },\n    outputs: [{ href: SIGNED_POST_URL, storage: STORAGE, type: 'image/jpeg' }],\n  };\n\n  const config = {\n    method: 'post',\n    url: 'https://image.adobe.io/lrService/autoStraighten',\n    headers: headers,\n    data: data,\n  };\n\n  const response = await axios.request(config);\n  console.log('Auto Straighten Job Submitted:', response.data);\n  return response.data;\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"_links\": {\n    \"self\": {\n      \"href\": \"https://image.adobe.io/lrService/status/<:jobId>\"\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"get-status\"\n    }}>{`Get Status`}</h2>\n    <p>{`Next up, we will use the `}<a parentName=\"p\" {...{\n        \"href\": \"../api/lightroom_getStatus.md\"\n      }}>{`Get Status`}</a>{` endpoint to monitor the job status until it completes.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl-2\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://image.adobe.io/lrService/status/<:jobId>' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"x-api-key: $CLIENT_ID\" \\\\\n--header \"Authorization: Bearer $ACCESS_TOKEN\" \n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-3\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def check_job_status(job_id, access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}',\n    }\n\n    status_url = f'https://image.adobe.io/lrService/status/{job_id}'\n    response = requests.get(status_url, headers=headers)\n    response.raise_for_status()\n    return response.json()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-3\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function checkJobStatus(jobId, accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const url = \\`https://image.adobe.io/lrService/status/\\${jobId}\\`;\n\n  try {\n    const response = await axios.get(url, { headers: headers });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error checking job status:\", error);\n  }\n}\n`}</code></pre>\n    <p>{`A successful response looks like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"jobId\": \"38ae54a3-6961-43fa-914f-111111111\",\n    \"created\": \"2024-11-28T23:07:01.264Z\",\n    \"modified\": \"2024-11-28T23:07:03.036Z\",\n    \"_links\": {\n        \"self\": {\n            \"href\": \"https://image.adobe.io/lrService/status/38ae54a3-6961-43fa-914f-111111111\"\n        }\n    },\n    \"outputs\": [\n        {\n            \"input\": \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\",\n            \"status\": \"succeeded\",\n            \"_links\": {\n                \"self\": {\n                    \"href\": \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\",\n                    \"storage\": \"azure\"\n                }\n            }\n        }\n    ]\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"view-modified-image\"\n    }}>{`View Modified Image`}</h2>\n    <p>{`Access the straightened at the `}<inlineCode parentName=\"p\">{`outputs[0]._links.self.href`}</inlineCode>{` URL (the `}<inlineCode parentName=\"p\">{`SIGNED_POST_URL`}</inlineCode>{` provided earlier). 🎉`}</p>\n    <h2 {...{\n      \"id\": \"full-example\"\n    }}>{`Full Example`}</h2>\n    <p>{`You can review the `}<a parentName=\"p\" {...{\n        \"href\": \"#prerequisites\"\n      }}>{`prerequisites`}</a>{` section to understand how to set up your environment prior to running this code. Note that this is an example only and is not production-ready and requires additional error handling, logging, security measures, and more before you can run it at scale in a live application.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"python-4\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import os\nimport time\nimport requests\n\n# Replace with your actual pre-signed URLs and storage option\nSIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'  # Input image URL\nSIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'  # Output image URL\nSTORAGE = 'azure'  # e.g., 'external', 'azure'\n\ndef main():\n    access_token = retrieve_access_token()\n    job_response = auto_straighten(access_token)\n    job_id = job_response['_links']['self']['href'].split('/')[-1]\n    check_job_status(job_id, access_token)\n\ndef retrieve_access_token():\n    client_id = os.environ['CLIENT_ID']\n    client_secret = os.environ['CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,read_organizations'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    print(\"Access Token Retrieved\")\n    return token_data['access_token']\n\ndef auto_straighten(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'inputs': {\n            'href': SIGNED_GET_URL,\n            'storage': STORAGE\n        },\n        'outputs': [{\n            'href': SIGNED_POST_URL,\n            'storage': STORAGE,\n            'type': 'image/jpeg'\n        }]\n    }\n\n    response = requests.post('https://image.adobe.io/lrService/autoStraighten', headers=headers, json=data)\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Auto Straighten Job Submitted:\", job_response)\n    return job_response\n\ndef check_job_status(job_id, access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    url = f'https://image.adobe.io/lrService/status/{job_id}'\n\n    status = 'submitted'\n    while status not in ['succeeded', 'failed']:\n        time.sleep(5)  # Wait for 5 seconds\n        response = requests.get(url, headers=headers)\n        response.raise_for_status()\n        status_response = response.json()\n        status = status_response.get('outputs', [{}])[0].get('status')\n        print(f'Job Status: {status}')\n\n    if status == 'succeeded':\n        print('Auto straighten completed successfully!')\n        print('You can access the modified image at your SIGNED_POST_URL.')\n    else:\n        print('Auto straighten failed.')\n\nif __name__ == '__main__':\n    main()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-4\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const axios = require('axios');\nconst qs = require('qs');\n\nconst SIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'; // Input image URL\nconst SIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'; // Output image URL\nconst STORAGE = 'azure'; // e.g., 'external', 'azure'\n\n(async () => {\n  const accessToken = await retrieveAccessToken();\n  const jobResponse = await autoStraighten(accessToken);\n  const jobId = jobResponse._links.self.href.split('/').pop();\n  await checkJobStatus(jobId, accessToken);\n})();\n\nasync function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.CLIENT_ID,\n    client_secret: process.env.CLIENT_SECRET,\n    scope: 'openid,AdobeID,read_organizations',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  const response = await axios.request(config);\n  console.log('Access Token Retrieved');\n  return response.data.access_token;\n}\n\nasync function autoStraighten(accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    inputs: { href: SIGNED_GET_URL, storage: STORAGE },\n    outputs: [{ href: SIGNED_POST_URL, storage: STORAGE, type: 'image/jpeg' }],\n  };\n\n  const config = {\n    method: 'post',\n    url: 'https://image.adobe.io/lrService/autoStraighten',\n    headers: headers,\n    data: data,\n  };\n\n  const response = await axios.request(config);\n  console.log('Auto Straighten Job Submitted:', response.data);\n  return response.data;\n}\n\nasync function checkJobStatus(jobId, accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const url = \\`https://image.adobe.io/lrService/status/\\${jobId}\\`;\n\n  let status = 'submitted';\n  while (status !== 'succeeded' && status !== 'failed') {\n    await new Promise((resolve) => setTimeout(resolve, 5000)); // Wait for 5 seconds\n    const response = await axios.get(url, { headers: headers });\n    status = response.data.outputs[0].status;\n    console.log(\\`Job Status: \\${status}\\`);\n  }\n\n  if (status === 'succeeded') {\n    console.log('Auto straighten completed successfully!');\n    console.log('You can access the modified image at your SIGNED_POST_URL.');\n  } else {\n    console.error('Auto straighten failed.');\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deepen-your-understanding\"\n    }}>{`Deepen Your Understanding`}</h2>\n    <p>{`Explore more Lightroom API options in our `}<a parentName=\"p\" {...{\n        \"href\": \"../code-sample\"\n      }}>{`Lightroom Tutorials`}</a>{` 🚀`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","CodeBlock","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","style","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}