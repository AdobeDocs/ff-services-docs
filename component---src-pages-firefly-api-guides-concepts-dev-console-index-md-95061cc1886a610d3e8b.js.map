{"version":3,"file":"component---src-pages-firefly-api-guides-concepts-dev-console-index-md-95061cc1886a610d3e8b.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/firefly-api/guides/concepts/dev-console/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ff-services-docs/ff-services-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adobe-developer-console\"\n    }}>{`Adobe Developer Console`}</h1>\n    <p>{`Use Adobe Developer Console to manage resources and credentials`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The `}<strong parentName=\"p\">{`Adobe Developer Console`}</strong>{` is an administration interface that enables developers to manage Adobe's APIs and services. To securely access Adobe's APIs, including the Firefly API, your application must authenticate using OAuth 2.0 protocols. This involves obtaining an access token that grants your application permissions to interact with Adobe's services.`}</p>\n    <h2 {...{\n      \"id\": \"getting-started-for-firefly-apis\"\n    }}>{`Getting Started for Firefly APIs`}</h2>\n    <p>{`You will need:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/\"\n        }}>{`Adobe Developer Console`}</a>{` account.`}</li>\n      <li parentName=\"ul\">{`A `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-console/docs/guides/projects/projects-empty/\"\n        }}>{`project`}</a>{` with Firefly API `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/\"\n        }}>{`OAuth Server-to-Server credentials set up`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Access to your Client ID and Client Secret from the Developer Console.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"access-tokens\"\n    }}>{`Access Tokens`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview\"\n      }}>{`Generating access tokens`}</a>{` can be accomplished either directly from the Developer Console UI or programmatically.`}</p>\n    <p>{`To generate an access token programatically, refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"../authentication/index.md\"\n      }}>{`Authentication guide`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"best-practices\"\n    }}>{`Best Practices`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Token Management:`}</strong>{` Access tokens are valid for 24 hours. Implement a mechanism to refresh tokens before they expire to maintain uninterrupted access.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Scope Limitation:`}</strong>{` Request only the scopes necessary for your application's functionality to adhere to the principle of least privilege.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Secure Storage:`}</strong>{` Store your Client ID, Client Secret, and access tokens securely to prevent unauthorized access.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"managing-secrets\"\n    }}>{`Managing Secrets`}</h2>\n    <h3 {...{\n      \"id\": \"rotating-secrets\"\n    }}>{`Rotating Secrets`}</h3>\n    <p>{`You can rotate your client secret as needed. For some, this means rotating client secrets every few months. For others, this may mean rotating secrets every day.`}</p>\n    <p>{`Rotating your secret is highly recommended in case of a leak or unauthorized access. Furthermore, rotating client secrets periodically is an industry-standard practice that strengthens your application security posture. Similar to access tokens, you can rotate your client secret in the Developer Console UI or using an API.`}</p>\n    <p><strong parentName=\"p\">{`Org admins`}</strong>{`: Navigate to your project in Adobe Developer Console. Click the `}<strong parentName=\"p\">{`Add to Project`}</strong>{` button and select `}<strong parentName=\"p\">{`API`}</strong>{` and then add `}<strong parentName=\"p\">{`I/O Management API`}</strong>{` to your project. This API will allow your credential to read, delete, and generate new client secrets. You will need to configure the credential name before saving it.`}</p>\n    <p>{`In order to successfully rotate secrets without contacting the org admin, developers will need the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`orgId`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`projectId`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`credentialId`}</inlineCode></li>\n      <li parentName=\"ul\">{`Access token`}</li>\n    </ul>\n    <p>{`Navigate to the OAuth server-to-server credential overview page. Copy the `}<inlineCode parentName=\"p\">{`orgId`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`projectId`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`credentialId`}</inlineCode>{` from the URL by comparing it to the templated URL below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`https://developer.adobe.com/console/projects/{orgId}/{projectId}/credentials/{credentialId}/details/oauthservertoserver\n`}</code></pre>\n    <p>{`Next, you need an access token. To generate an access token, use the following command. Make sure to include scopes that the I/O Management API requires in the `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` parameter:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -X POST 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n-H 'Content-Type: application/x-www-form-urlencoded'\n-d 'client_id={CLIENT_ID}&client_secret={CLIENT_SECRET}&grant_type=client_credentials&scope=AdobeID,openid,read_organizations,additional_info.projectedProductContext,additional_info.roles,adobeio_api,read_client_secret,manage_client_secrets'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"list-all-secrets\"\n    }}>{`List All Secrets`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -X GET 'https://api.adobe.io/console/organizations/{orgId}/credentials/{credentialId}/secrets' \\\\\n     -H 'Authorization: Bearer {ACCESS_TOKEN}' \\\\\n     -H 'x-api-key: {CLIENT_ID}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"generate-a-new-secret\"\n    }}>{`Generate a New Secret`}</h3>\n    <p>{`Make the following request. The API response will contain the `}<inlineCode parentName=\"p\">{`client_secret`}</inlineCode>{` that was added to the project and its `}<inlineCode parentName=\"p\">{`uuid`}</inlineCode>{`. You can find it again later on the Developer Console UI. After you generate a new secret, update your application to use the new secret.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -X POST 'https://api.adobe.io/console/organizations/{orgId}/credentials/{credentialId}/secrets' \\\\\n     -H 'Authorization: Bearer {ACCESS TOKEN}' \\\\\n     -H 'x-api-key: {CLIENT ID}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"delete-a-secret\"\n    }}>{`Delete a secret`}</h3>\n    <p>{`To delete a secret, first call the API to list all client secrets for your credential. Grab the value of the `}<inlineCode parentName=\"p\">{`uuid`}</inlineCode>{` field for your older secret that you wish to delete. Call the following API to delete the old `}<inlineCode parentName=\"p\">{`client_secret`}</inlineCode>{` from your credential by passing the `}<inlineCode parentName=\"p\">{`uuid`}</inlineCode>{` in the URL.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -X DELETE 'https://api.adobe.io/console/organizations/{orgId}/credentials/{credentialId}/secrets/{uuid}' \\\\\n     -H 'Authorization: Bearer {ACCESS TOKEN}' \\\\\n     -H 'x-api-key: {CLIENT ID}'\n`}</code></pre>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Once a client secret is deleted, you cannot restore it. Therefore, be certain you have replaced the old client secret with the new one in all locations.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}