{"version":3,"file":"component---src-pages-firefly-api-guides-index-md-383d48f900db16b95923.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/firefly-api/guides/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ff-services-docs/ff-services-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quickstart-guide\"\n    }}>{`Quickstart Guide`}</h1>\n    <p>{`Generate your first image with Firefly Services`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"100%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/5530d/cat-coding.webp 320w\", \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/0c8fb/cat-coding.webp 640w\", \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/94b1e/cat-coding.webp 1280w\", \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/0b34d/cat-coding.webp 1920w\", \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/96d48/cat-coding.webp 2048w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/8980b/cat-coding.jpg 320w\", \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/56d4e/cat-coding.jpg 640w\", \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/62aaf/cat-coding.jpg 1280w\", \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/aaf92/cat-coding.jpg 1920w\", \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/09658/cat-coding.jpg 2048w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/jpeg\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/ff-services-docs/static/82044b6fe3cf44ec68c4872f784cd82d/62aaf/cat-coding.jpg\",\n            \"alt\": \"an illustration of a cat coding on a laptop\",\n            \"title\": \"an illustration of a cat coding on a laptop\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <h3 {...{\n      \"id\": \"credentials\"\n    }}>{`Credentials`}</h3>\n    <p>{`If you don't already have a Firefly API or Firefly Services `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{`, retrieve them from your `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview\"\n      }}>{`Adobe Developer Console project`}</a>{` before reading further. `}<strong parentName=\"p\">{`Securely store these credentials and never expose them in client-side or public code.`}</strong></p>\n    <h3 {...{\n      \"id\": \"set-up-your-environment\"\n    }}>{`Set Up Your Environment`}</h3>\n    <p>{`Before we begin this tutorial, run the following in a secure terminal:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"javascript\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir firefly-api-generate-images-tutorial\ncd firefly-api-generate-images-tutorial\nnpm init --y\nnpm install axios qs\ntouch index.js\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir firefly-api-generate-images-tutorial\ncd firefly-api-generate-images-tutorial\npython -m pip install requests\ntouch main.py\n`}</code></pre>\n    <p>{`Depending on your learning style, you may prefer to walk through this tutorial step-by-step or `}<a parentName=\"p\" {...{\n        \"href\": \"#full-example\"\n      }}>{`jump immediately to the full source code`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"retrieve-an-access-token\"\n    }}>{`Retrieve an Access Token`}</h2>\n    <p>{`Open a secure terminal and `}<inlineCode parentName=\"p\">{`export`}</inlineCode>{` your `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{` as environment variables so that your later commands can access them:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export FIREFLY_SERVICES_CLIENT_ID=yourClientIdAsdf123\nexport FIREFLY_SERVICES_CLIENT_SECRET=yourClientSecretAsdf123\n`}</code></pre>\n    <p>{`Generate an access token:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\\\n--data-urlencode 'grant_type=client_credentials' \\\\\n--data-urlencode \"client_id=$FIREFLY_SERVICES_CLIENT_ID\" \\\\\n--data-urlencode \"client_secret=$FIREFLY_SERVICES_CLIENT_SECRET\" \\\\\n--data-urlencode 'scope=openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-1\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def retrieve_access_token():\n    client_id = os.environ['FIREFLY_SERVICES_CLIENT_ID']\n    client_secret = os.environ['FIREFLY_SERVICES_CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    print(\"Access Token Retrieved\")\n    return token_data['access_token']\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-1\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.FIREFLY_SERVICES_CLIENT_ID,\n    client_secret: process.env.FIREFLY_SERVICES_CLIENT_SECRET,\n    scope: 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Access Token Retrieved');\n    return response.data.access_token;\n  } catch (error) {\n    console.error('Error retrieving access token:', error.response.data);\n  }\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\"access_token\":\"yourAccessTokenAsdf123\",\"token_type\":\"bearer\",\"expires_in\":86399}\n`}</code></pre>\n    <p>{`Export this access token so that the next script can conveniently access it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export FIREFLY_SERVICES_ACCESS_TOKEN=yourAccessTokenAsdf123\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"generate-an-image\"\n    }}>{`Generate an Image`}</h2>\n    <p>{`Next, call the `}<a parentName=\"p\" {...{\n        \"href\": \"./api/image_generation/V3/\"\n      }}>{`Firefly Generate Images API`}</a>{`:`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"bash, Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"curl-1\"\n    }}>{`cURL`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://firefly-api.adobe.io/v3/images/generate' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"x-api-key: $FIREFLY_SERVICES_CLIENT_ID\" \\\\\n--header \"Authorization: Bearer $FIREFLY_SERVICES_ACCESS_TOKEN\" \\\\\n--data '{\n    \"prompt\": \"a realistic illustration of a cat coding\"\n}'\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"python-2\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def generate_image(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['FIREFLY_SERVICES_CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'prompt': 'a realistic illustration of a cat coding',  # Replace with your actual prompt\n    }\n\n    response = requests.post(\n        'https://firefly-api.adobe.io/v3/images/generate',\n        headers=headers,\n        json=data\n    )\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Generate Image Response:\", job_response)\n    return job_response\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-2\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`async function generateImage(accessToken) {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"x-api-key\": process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    prompt: \"a realistic illustration of a cat coding\", // Replace with your actual prompt\n  };\n\n  const config = {\n    method: \"post\",\n    url: \"https://firefly-api.adobe.io/v3/images/generate\",\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error during generateImage:\", error);\n  }\n}\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"size\": {\n        \"width\": 2048,\n        \"height\": 2048\n    },\n    \"outputs\": [\n        {\n            \"seed\": 1779323515,\n            \"image\": {\n                \"url\": \"https://pre-signed-firefly-prod.s3-accelerate.amazonaws.com/images/asdf-12345?lots=of&query=params...\"\n            }\n        }\n    ],\n    \"contentClass\": \"art\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"view-the-generated-image\"\n    }}>{`View the Generated Image`}</h2>\n    <p>{`Open the URL in your browser to see the image you generated with Firefly 🎉`}</p>\n    <h2 {...{\n      \"id\": \"full-example\"\n    }}>{`Full Example`}</h2>\n    <p>{`You can review the `}<a parentName=\"p\" {...{\n        \"href\": \"#prerequisites\"\n      }}>{`prerequisites`}</a>{` section to understand how to set up your environment prior to running this code. Note that this is an example only and is not production-ready and requires additional error handling, logging, security measures, and more before you can run it at scale in a live application.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"Python, JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"python-3\"\n    }}>{`Python`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import os\nimport requests\n\ndef main():\n    access_token = retrieve_access_token()\n    generate_image(access_token)\n\ndef retrieve_access_token():\n    client_id = os.environ['FIREFLY_SERVICES_CLIENT_ID']\n    client_secret = os.environ['FIREFLY_SERVICES_CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    print(\"Access Token Retrieved\")\n    return token_data['access_token']\n\ndef generate_image(access_token):\n    client_id = os.environ['FIREFLY_SERVICES_CLIENT_ID']\n\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': client_id,\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'prompt': 'a realistic illustration of a cat coding',  # Replace with your actual prompt\n    }\n\n    response = requests.post(\n        'https://firefly-api.adobe.io/v3/images/generate',\n        headers=headers,\n        json=data\n    )\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Generate Image Response:\", job_response)\n\n    # Access the generated image URL\n    image_url = job_response['outputs'][0]['image']['url']\n    print(f\"You can view the generated image at: {image_url}\")\n\nif __name__ == '__main__':\n    main()\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"javascript-3\"\n    }}>{`JavaScript`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const axios = require('axios');\nconst qs = require('qs');\n\n(async () => {\n  const accessToken = await retrieveAccessToken();\n  await generateImage(accessToken);\n})();\n\nasync function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.FIREFLY_SERVICES_CLIENT_ID,\n    client_secret: process.env.FIREFLY_SERVICES_CLIENT_SECRET,\n    scope: 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Access Token Retrieved');\n    return response.data.access_token;\n  } catch (error) {\n    console.error('Error retrieving access token:', error.response.data);\n  }\n}\n\nasync function generateImage(accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: \\`Bearer \\${accessToken}\\`,\n  };\n\n  const data = {\n    prompt: 'a realistic illustration of a cat coding', // Replace with your actual prompt\n  };\n\n  const config = {\n    method: 'post',\n    url: 'https://firefly-api.adobe.io/v3/images/generate',\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Generate Image Response:', response.data);\n\n    // Access the generated image URL\n    const imageUrl = response.data.outputs[0].image.url;\n    console.log(\\`You can view the generated image at: \\${imageUrl}\\`);\n  } catch (error) {\n    console.error('Error during generateImage:', error.response.data);\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deepen-your-understanding\"\n    }}>{`Deepen Your Understanding`}</h2>\n    <p>{`Visit the `}<a parentName=\"p\" {...{\n        \"href\": \"./how-tos/firefly-generate-image-api-tutorial.md\"\n      }}>{`Firefly Generate Image API tutorial`}</a>{` to learn more about the rich customization options available to you 🚀`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","CodeBlock","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}