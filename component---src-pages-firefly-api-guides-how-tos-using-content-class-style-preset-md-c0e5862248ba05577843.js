"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[701],{92451:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return p},default:function(){return u}});var n=a(58168),s=a(80045),i=(a(88763),a(15680)),o=a(83407);const r=["components"],p={},l=(d="InlineAlert",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var d;const c={_frontmatter:p},m=o.A;function u(e){let{components:t}=e,a=(0,s.A)(e,r);return(0,i.mdx)(m,(0,n.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"using-content-class-and-style-presets"},"Using Content Class and Style Presets"),(0,i.mdx)("p",null,"Learn how to use optional parameters to direct the style of the images generated in your API calls."),(0,i.mdx)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Firefly API credentials. If you don't have them yet, first visit the Firefly Services ",(0,i.mdx)("a",{parentName:"li",href:"../../../guides/get-started.md"},"Getting Started")," guide to obtain a ",(0,i.mdx)("inlineCode",{parentName:"li"},"client_id")," and ",(0,i.mdx)("inlineCode",{parentName:"li"},"client_secret"),"."),(0,i.mdx)("li",{parentName:"ul"},"Node.js installed on your machine and basic familiarity with ",(0,i.mdx)("inlineCode",{parentName:"li"},"JavaScript"),". ",(0,i.mdx)("strong",{parentName:"li"},"Note:")," The code for this guide will make use of the ",(0,i.mdx)("a",{parentName:"li",href:"../api/image_generation/V3/"},"Firefly REST APIs")," via Node.js, but could be written in any language, or with the ",(0,i.mdx)("a",{parentName:"li",href:"https://developer.adobe.com/firefly-services/docs/guides/sdks/"},"SDK"),".")),(0,i.mdx)(l,{variant:"warning",slots:"title, text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"IMPORTANT"),(0,i.mdx)("p",null,"The Node.js code provided in this guide uses imports and top-level ",(0,i.mdx)("inlineCode",{parentName:"p"},"await"),", so you must either use the ",(0,i.mdx)("inlineCode",{parentName:"p"},".mjs")," extension on your script file, or ensure you have a ",(0,i.mdx)("inlineCode",{parentName:"p"},"package.json")," with ",(0,i.mdx)("inlineCode",{parentName:"p"},'type: "module"'),"."),(0,i.mdx)("h2",{id:"specifying-a-content-class"},"Specifying a Content Class"),(0,i.mdx)("p",null,"Images generated by Firefly fall into two general categories - photos and art. This is represented in the REST API as the parameter, ",(0,i.mdx)("inlineCode",{parentName:"p"},"contentClass"),". When you do not pass this value as part of your call, Firefly will do its best to guess what makes sense based on the prompt. However, if you know what kind of result you want, it always makes sense to pass that in your code. To specify the value, simply add the ",(0,i.mdx)("inlineCode",{parentName:"p"},"contentClass")," parameter to your request body. For example:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n "numVariations":1,\n "prompt":"The prompt here...",\n "contentClass":"art",\n "size": {\n     "width":1792,\n     "height":2304\n  }\n}\n')),(0,i.mdx)("p",null,"First, you will see this in action by coding a simple demo that shows the result of ",(0,i.mdx)("em",{parentName:"p"},"not")," specifying a class, followed by specifying each of the two options, and note the differences."),(0,i.mdx)("p",null,"Below is the generic function which will be used to try out the image generation features with a ",(0,i.mdx)("inlineCode",{parentName:"p"},"prompt")," and optional ",(0,i.mdx)("inlineCode",{parentName:"p"},"contentClass"),":"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"async function generateImage(prompt, id, token, contentClass) {\n    let body = {\n        numVariations:1,\n        prompt,\n        size:{\n            width:1792,\n            height:2304\n        }\n    }\n \n    if (contentClass) body.contentClass = contentClass;\n \n    let req = await fetch('https://firefly-api.adobe.io/v3/images/generate', {\n        method:'POST',\n        headers: {\n            'X-Api-Key':id,\n            'Authorization':`Bearer ${token}`,\n            'Content-Type':'application/json'\n        },\n        body: JSON.stringify(body)\n    });\n \n    return await req.json();\n}\n")),(0,i.mdx)("p",null,"In this method, you'll notice the ",(0,i.mdx)("inlineCode",{parentName:"p"},"contentClass")," is specified as an argument, and when it exists, it will be passed along with the rest of the body in the call to the API. This makes it really easy to test with different options."),(0,i.mdx)("p",null,"Before calling the API, you'll need to authenticate using your Firefly API credentials. You can do so with the following code provided for you to retrieve an access token and define a prompt:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"/*\n  Set our creds based on environment variables.\n*/\nconst CLIENT_ID = process.env.CLIENT_ID;\nconst CLIENT_SECRET = process.env.CLIENT_SECRET;\n\nasync function getAccessToken(id, secret) {\n    const params = new URLSearchParams();\n\n    params.append('grant_type', 'client_credentials');\n    params.append('client_id', id);\n    params.append('client_secret', secret);\n    params.append('scope', 'openid,AdobeID,firefly_enterprise,firefly_api,ff_apis');\n    \n    let resp = await fetch('https://ims-na1-stg1.adobelogin.com/ims/token/v3', \n        { \n            method: 'POST', \n            body: params\n        }\n    );\n\n    let data = await resp.json();\n    return data.access_token;\n}\n\nlet token = await getAccessToken(CLIENT_ID, CLIENT_SECRET);\nlet prompt = 'A long-haired cat majestically riding a flying unicorn. The cat is wielding a rainbow shield and sword, pointing the swords tip outwards.';\n\n")),(0,i.mdx)("p",null,"You will also need a utility class to download the result, which is provided below:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"import fs from 'fs';\nimport { Readable } from 'stream';\nimport { finished } from 'stream/promises';\n\nasync function downloadFile(url, filePath) {\n    let res = await fetch(url);\n    const body = Readable.fromWeb(res.body);\n    const download_write_stream = fs.createWriteStream(filePath);\n    return await finished(body.pipe(download_write_stream));\n}\n")),(0,i.mdx)("p",null,"Now, use the following code which runs three calls; one without specifying the ",(0,i.mdx)("inlineCode",{parentName:"p"},"contentClass")," and one that specifies ",(0,i.mdx)("inlineCode",{parentName:"p"},'"photo"'),", and subsequently ",(0,i.mdx)("inlineCode",{parentName:"p"},'"art"'),"."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},'// First, don\'t specify a content class at all\nlet result = await generateImage(prompt, CLIENT_ID, token);\nlet fileName = `./output/v3_noclass.jpg`;\nawait downloadFile(result.outputs[0].image.url, fileName);\n  \n// Second, specify the "photo" content class\nresult = await generateImage(prompt, CLIENT_ID, token, "photo");\nfileName = `./output/v3_photo.jpg`;\nawait downloadFile(result.outputs[0].image.url, fileName);\n \n// Third, pass in the "art" content class\nresult = await generateImage(prompt, CLIENT_ID, token, "art");\nfileName = `./output/v3_art.jpg`;\nawait downloadFile(result.outputs[0].image.url, fileName);\n')),(0,i.mdx)("h3",{id:"generated-results"},"Generated Results"),(0,i.mdx)("p",null,"Given the ",(0,i.mdx)("inlineCode",{parentName:"p"},"prompt")," defined above: ",(0,i.mdx)("inlineCode",{parentName:"p"},'"A long-haired cat majestically riding a flying unicorn. The cat is wielding a rainbow shield and sword, pointing the swords tip outwards."')," - you should see the following results:"),(0,i.mdx)("h4",{id:"no-content-class"},"No Content Class"),(0,i.mdx)("p",null,(0,i.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"500px"}},"\n      ",(0,i.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"128.75%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,i.mdx)("picture",{parentName:"span"},"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/4639010a02c856090f5ed6dce1bf211d/5530d/v3_noclass.webp 320w","/ff-services-docs/static/4639010a02c856090f5ed6dce1bf211d/601b1/v3_noclass.webp 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/webp"}),"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/4639010a02c856090f5ed6dce1bf211d/8980b/v3_noclass.jpg 320w","/ff-services-docs/static/4639010a02c856090f5ed6dce1bf211d/953fe/v3_noclass.jpg 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/jpeg"}),"\n          ",(0,i.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/ff-services-docs/static/4639010a02c856090f5ed6dce1bf211d/953fe/v3_noclass.jpg",alt:"Result with no class specified",title:"Result with no class specified",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,i.mdx)("h4",{id:"art-content-class"},"Art Content Class"),(0,i.mdx)("p",null,(0,i.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"500px"}},"\n      ",(0,i.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"128.75%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,i.mdx)("picture",{parentName:"span"},"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/afa0d37220a30c5f5b06ada8a615daf3/5530d/v3_artClass.webp 320w","/ff-services-docs/static/afa0d37220a30c5f5b06ada8a615daf3/601b1/v3_artClass.webp 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/webp"}),"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/afa0d37220a30c5f5b06ada8a615daf3/8980b/v3_artClass.jpg 320w","/ff-services-docs/static/afa0d37220a30c5f5b06ada8a615daf3/953fe/v3_artClass.jpg 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/jpeg"}),"\n          ",(0,i.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/ff-services-docs/static/afa0d37220a30c5f5b06ada8a615daf3/953fe/v3_artClass.jpg",alt:"Result with art class specified",title:"Result with art class specified",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,i.mdx)("h4",{id:"photo-content-class"},"Photo Content Class"),(0,i.mdx)("p",null,(0,i.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"500px"}},"\n      ",(0,i.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"128.75%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,i.mdx)("picture",{parentName:"span"},"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/b696ed5e5e2a35312f8eebcb79b330d9/5530d/v3_photoClass.webp 320w","/ff-services-docs/static/b696ed5e5e2a35312f8eebcb79b330d9/601b1/v3_photoClass.webp 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/webp"}),"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/b696ed5e5e2a35312f8eebcb79b330d9/8980b/v3_photoClass.jpg 320w","/ff-services-docs/static/b696ed5e5e2a35312f8eebcb79b330d9/953fe/v3_photoClass.jpg 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/jpeg"}),"\n          ",(0,i.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/ff-services-docs/static/b696ed5e5e2a35312f8eebcb79b330d9/953fe/v3_photoClass.jpg",alt:"Result with photo class specified",title:"Result with photo class specified",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,i.mdx)("h2",{id:"specifying-style-presets"},"Specifying Style Presets"),(0,i.mdx)("p",null,"Another way for Firefly to direct its output is via the use of ",(0,i.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/firefly-services/docs/firefly-api/guides/concepts/styles/"},"style presets"),". These style presets are a ",(0,i.mdx)("em",{parentName:"p"},"long"),' list of options ranging from "black and white", to "warm tone" and "misty".'),(0,i.mdx)("p",null,"As with ",(0,i.mdx)("inlineCode",{parentName:"p"},"contentClass")," above, to specify a style preset, you simply include the ",(0,i.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/firefly-services/docs/firefly-api/guides/concepts/styles/"},"preset ID")," for it in your request body:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "numVariations":1,\n  "prompt":"The prompt here...",\n  "style":{\n      "presets":["bw","grainy_film"]\n  },\n  "size":{\n      "width":1792,\n      "height":2304\n  }\n}\n')),(0,i.mdx)("p",null,"In the above example, two presets are used,",(0,i.mdx)("inlineCode",{parentName:"p"}," bw"),", for black and white, and ",(0,i.mdx)("inlineCode",{parentName:"p"},"grainy_film")," for a grainy film effect. In ",(0,i.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/firefly-services/docs/firefly-api/guides/concepts/styles/"},"the documentation"),", you'll notice that each preset has a name and ID. For the API, you need to specify the ID values only."),(0,i.mdx)("p",null,'Also, note that while the presets value can be an array, Firefly will not "sanity" check these values. What that means is, if you intentionally ask Firefly to use presets that don\'t necessarily make sense, Firefly will try its best but the result may not be good. This is a case where artistic sense has to be applied, not developer skill.'),(0,i.mdx)("p",null,"Once again, you can use a simple method to test this:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},"async function generateImage(prompt, id, token, presets) {\n \nlet body = {\n  numVariations:1,\n  prompt,\n  size:{\n    width:1792,\n    height:2304\n  }\n}\n \nif (presets) body.style = { presets };\n \nlet req = await fetch('https://firefly-api.adobe.io/v3/images/generate', {\n  method:'POST',\n  headers: {\n    'X-Api-Key':id,\n    'Authorization':`Bearer ${token}`,\n    'Content-Type':'application/json'\n  },\n  body: JSON.stringify(body)\n});\n \nreturn await req.json();\n}\n")),(0,i.mdx)("p",null,"The method above simply adds the ",(0,i.mdx)("inlineCode",{parentName:"p"},"presets")," value to the call when it's specified. This can be tested with the following:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-js"},'result = await generateImage(prompt, CLIENT_ID, token, ["golden"]);\nfileName = `./output/v3_golden.jpg`;\nawait downloadFile(result.outputs[0].image.url, fileName);\n \nresult = await generateImage(prompt, CLIENT_ID, token, ["pastel_color"]);\nfileName = `./output/v3_pastel_color.jpg`;\nawait downloadFile(result.outputs[0].image.url, fileName);\n')),(0,i.mdx)("h3",{id:"generated-results-1"},"Generated Results"),(0,i.mdx)("p",null,"The results of using the ",(0,i.mdx)("inlineCode",{parentName:"p"},"golden")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"pastel_color")," as ",(0,i.mdx)("inlineCode",{parentName:"p"},"presets")," in the above function are shown below:"),(0,i.mdx)("h4",{id:"golden-preset-result"},"Golden Preset Result"),(0,i.mdx)("p",null,(0,i.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"500px"}},"\n      ",(0,i.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"128.75%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,i.mdx)("picture",{parentName:"span"},"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/fd6ba721458b769d742bd83cc4e276c4/5530d/v3_golden.webp 320w","/ff-services-docs/static/fd6ba721458b769d742bd83cc4e276c4/601b1/v3_golden.webp 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/webp"}),"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/fd6ba721458b769d742bd83cc4e276c4/8980b/v3_golden.jpg 320w","/ff-services-docs/static/fd6ba721458b769d742bd83cc4e276c4/953fe/v3_golden.jpg 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/jpeg"}),"\n          ",(0,i.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/ff-services-docs/static/fd6ba721458b769d742bd83cc4e276c4/953fe/v3_golden.jpg",alt:"Result with golden",title:"Result with golden",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,i.mdx)("h4",{id:"pastel-colors-preset-result"},"Pastel Colors Preset Result"),(0,i.mdx)("p",null,(0,i.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"500px"}},"\n      ",(0,i.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"128.75%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,i.mdx)("picture",{parentName:"span"},"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/385a7bf5d1e34bca7bc93094dfc3d4e3/5530d/v3_pastel_color.webp 320w","/ff-services-docs/static/385a7bf5d1e34bca7bc93094dfc3d4e3/601b1/v3_pastel_color.webp 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/webp"}),"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/385a7bf5d1e34bca7bc93094dfc3d4e3/8980b/v3_pastel_color.jpg 320w","/ff-services-docs/static/385a7bf5d1e34bca7bc93094dfc3d4e3/953fe/v3_pastel_color.jpg 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/jpeg"}),"\n          ",(0,i.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/ff-services-docs/static/385a7bf5d1e34bca7bc93094dfc3d4e3/953fe/v3_pastel_color.jpg",alt:"Result with pastel_colors",title:"Result with pastel_colors",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,i.mdx)("h2",{id:"next-steps"},"Next Steps"),(0,i.mdx)("p",null,"While this guide demonstrated two powerful ways to influence Firefly when generating images, there's still more you can learn about to tweak what's generated from your API calls. Check out the other guides in this ",(0,i.mdx)("a",{parentName:"p",href:"../how-tos/"},"how-tos")," section and the ",(0,i.mdx)("a",{parentName:"p",href:"../api/image_generation/V3/"},"API Reference")," for more details."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-firefly-api-guides-how-tos-using-content-class-style-preset-md-c0e5862248ba05577843.js.map