"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5174],{73598:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return l},default:function(){return u}});var a=t(58168),o=t(80045),s=(t(88763),t(15680)),r=t(83407);const i=["components"],l={},p={_frontmatter:l},d=r.A;function u(e){let{components:n}=e,t=(0,o.A)(e,i);return(0,s.mdx)(d,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"sample-code"},"Sample Code"),(0,s.mdx)("h2",{id:"lightroom"},"Lightroom"),(0,s.mdx)("h3",{id:"apply-autotone-to-an-image"},"Apply Autotone to an image"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n  https://image.adobe.io/lrService/autoTone \\\n  -H "Authorization: Bearer $token"  \\\n  -H "x-api-key: $apiKey" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "inputs": {\n        "href": "<SIGNED_GET_URL>",\n        "storage": "<storage>"\n    },\n    "outputs": [\n        {\n            "href": "<SIGNED_POST_URL>",\n            "type": "<type>",\n            "storage": "<storage>"\n        }\n    ]\n}\'\n')),(0,s.mdx)("p",null,"This initiates an asynchronous job and returns a request body containing the href to poll for job status."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "_links": {\n        "self": {\n            "href": "https://image.adobe.io/lrService/status/<:jobId>"\n        }\n    }\n}\n')),(0,s.mdx)("p",null,"To verify the completion status of the task, utilize the ",(0,s.mdx)("inlineCode",{parentName:"p"},"Get Status")," API. Refer to ",(0,s.mdx)("a",{parentName:"p",href:"../code-sample/index.md#poll-for-status-and-results"},"this link")," for an example demonstrating how to check the status.  "),(0,s.mdx)("h3",{id:"autostraighten-an-image"},"Autostraighten an image"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n  https://image.adobe.io/lrService/autoStraighten \\\n  -H "Authorization: Bearer $token"  \\\n  -H "x-api-key: $apiKey" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "inputs": {\n        "href": "<SIGNED_GET_URL>",\n        "storage": "<storage>"\n    },\n    "outputs": [\n        {\n            "href": "<SIGNED_POST_URL>",\n            "type": "<type>",\n            "storage": "<storage>"\n        }\n    ]\n}\'\n')),(0,s.mdx)("p",null,"This initiates an asynchronous job and returns a request body containing the href to poll for job status."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "_links": {\n        "self": {\n            "href": "https://image.adobe.io/lrService/status/<:jobId>"\n        }\n    }\n}\n')),(0,s.mdx)("p",null,"To verify the completion status of the task, utilize the ",(0,s.mdx)("inlineCode",{parentName:"p"},"Get Status")," API. Refer to ",(0,s.mdx)("a",{parentName:"p",href:"../code-sample/index.md#poll-for-status-and-results"},"this link")," for an example demonstrating how to check the status."),(0,s.mdx)("h3",{id:"apply-presets-to-an-image"},"Apply presets to an image"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n  https://image.adobe.io/lrService/presets \\\n  -H "Authorization: Bearer $token"  \\\n  -H "x-api-key: $apiKey" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "inputs": {\n        "source": {\n            "href": "<SIGNED_GET_URL>",\n            "storage": "<storage>"\n        },\n        "presets": [\n            {\n                "href": "<SIGNED_GET_URL>",\n                "storage": "<storage>"\n            },\n            {\n                "href": "<SIGNED_GET_URL>",\n                "storage": "<storage>"\n            }\n        ]\n    },\n    "outputs": [\n        {\n            "href": "<SIGNED_POST_URL>",\n            "type": "<type>",\n            "storage": "<storage>"\n        }\n    ]\n}\'\n')),(0,s.mdx)("p",null,"This initiates an asynchronous job and returns a request body containing the href to poll for job status."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "_links": {\n        "self": {\n            "href": "https://image.adobe.io/lrService/status/<:jobId>"\n        }\n    }\n}\n')),(0,s.mdx)("p",null,"To verify the completion status of the task, utilize the ",(0,s.mdx)("inlineCode",{parentName:"p"},"Get Status")," API. Refer to ",(0,s.mdx)("a",{parentName:"p",href:"../code-sample/index.md#poll-for-status-and-results"},"this link")," for an example demonstrating how to check the status."),(0,s.mdx)("h3",{id:"apply-edits-to-an-image"},"Apply edits to an image"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n  https://image.adobe.io/lrService/edit \\\n  -H "Authorization: Bearer $token"  \\\n  -H "x-api-key: $apiKey" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "inputs": {\n        "source": {\n            "href": "<SIGNED_GET_URL>",\n            "storage": "<storage>"\n        }\n    },\n    "options": {\n        "Exposure": -5.00 to 5.00,\n        "Contrast": -100 to 100,\n        "Sharpness": 0 10 150,\n        "WhiteBalance": <"As Shot", "Auto", "Cloudy", "Custom", "Daylight", "Flash", "Fluorescent", "Shade", "Tungsten">\n        "Saturation": -100 to 100,\n        "ColorNoiseReduction": 0 to 100,\n        "NoiseReduction": 0 to 100,\n        "VignetteAmount": -100 to 100,\n        "Vibrance": -100 to 100,\n        "Highlights": -100 to 100,\n        "Shadows": -100 to 100,\n        "Whites": -100 to 100,\n        "Blacks": -100 to 100,\n        "Clarity": -100 to 100,\n        "Dehaze": -100 to +100,\n        "SharpenRadius": 0.5 to 3.0,\n        "SharpenDetail": 0 to 100,\n        "SharpenEdgeMasking": 0 to 100,\n        "Texture": -100 t0 100\n    },\n    "outputs": [\n        {\n            "href": "<SIGNED_POST_URL>",\n            "type": "<type>",\n            "storage": "<storage>"\n        }\n    ]\n}\'\n')),(0,s.mdx)("p",null,"This initiates an asynchronous job and returns a request body containing the href to poll for job status."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "_links": {\n        "self": {\n            "href": "https://image.adobe.io/lrService/status/<:jobId>"\n        }\n    }\n}\n')),(0,s.mdx)("p",null,"To verify the completion status of the task, utilize the ",(0,s.mdx)("inlineCode",{parentName:"p"},"Get Status")," API. Refer to ",(0,s.mdx)("a",{parentName:"p",href:"../code-sample/index.md#poll-for-status-and-results"},"this link")," for an example demonstrating how to check the status."),(0,s.mdx)("h3",{id:"apply-xmp-to-an-image"},"Apply xmp to an image"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n  https://image.adobe.io/lrService/xmp \\\n  -H "Authorization: Bearer $token"  \\\n  -H "x-api-key: $apiKey" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "inputs": {\n        "href": "<SIGNED_GET_URL>",\n        "storage": "<storage>"\n    },\n    "options": {\n        "xmp": "<xmp>",\n        "orientation": "<orientation>"\n    },\n    "outputs": [\n        {\n            "href": "<SIGNED_POST_URL>",\n            "storage": "<storage>",\n            "type": "<type>"\n        }\n    ]\n}\'\n')),(0,s.mdx)("p",null,"This initiates an asynchronous job and returns a request body containing the href to poll for job status."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "_links": {\n        "self": {\n            "href": "https://image.adobe.io/lrService/status/<:jobId>"\n        }\n    }\n}\n')),(0,s.mdx)("p",null,"To verify the completion status of the task, utilize the ",(0,s.mdx)("inlineCode",{parentName:"p"},"Get Status")," API. Refer to ",(0,s.mdx)("a",{parentName:"p",href:"../code-sample/index.md#poll-for-status-and-results"},"this link")," for an example demonstrating how to check the status."),(0,s.mdx)("h3",{id:"poll-for-status-and-results"},"Poll for status and results"),(0,s.mdx)("p",null,"Use the JobID to poll on the href that is returned in the response from one of the Lightroom APIs."),(0,s.mdx)("ol",null,(0,s.mdx)("li",{parentName:"ol"},"Upon successful job completion, the output file will be available at the specified output href."),(0,s.mdx)("li",{parentName:"ol"},"If the job failed due to an error, the ",(0,s.mdx)("inlineCode",{parentName:"li"},"errorDetails")," field in the response will contain the details of the failure.")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-shell"},'curl -X GET \\\n  https://image.adobe.io/lrService/status/<jobId> \\\n  -H "Authorization: Bearer $token"  \\\n  -H "x-api-key: $apiKey" \\\n  -H "Content-Type: application/json" \\\n')),(0,s.mdx)("p",null,"And this will return a request body containing the job status for each requested output and eventually either errors or the hrefs to the requested outputs"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "jobId":"<jobId>",\n  "created":"2018-01-04T12:57:15.12345:Z",\n  "modified":"2018-01-04T12:58:36.12345:Z",\n  "outputs":[\n  {\n      "input":"<input_file_href>",\n      "status":"succeeded",\n      "_links":{\n        "self":\n        {\n          "href":"<output_file_href>",\n          "storage":"<storage>"\n        }\n      }\n    }\n  ],\n  "_links":{\n    "self":{\n      "href":"https://image.adobe.io/lrService/status/<jobId>"\n    }\n  }\n}\n')),(0,s.mdx)("h2",{id:"triggering-an-event-from-the-apis"},"Triggering an Event from the API's"),(0,s.mdx)("p",null,"In order to start receiving the events in your Webhook Application, you will need to pass in your IMS ORG ID in a header: ",(0,s.mdx)("inlineCode",{parentName:"p"},"x-gw-ims-org-id: <YOUR_IMS_ORG_ID>"),", when you make an API call to initiate a job. Please have a look at the example below that demonstrates the usage of the new header and a sample event received for that job."),(0,s.mdx)("h3",{id:"auto-tone-an-image-through-the-lightroom-api"},"Auto tone an image through the Lightroom API"),(0,s.mdx)("h4",{id:"step-1-initiate-a-job-to-auto-tone-an-image"},"Step 1: Initiate a job to auto tone an image"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n  https://image.adobe.io/lrService/autoTone \\\n  -H "Authorization: Bearer $token" \\\n  -H "Content-Type: application/json" \\\n  -H "x-api-key: <YOUR_API_KEY>" \\\n  -H \'x-gw-ims-org-id: <YOUR_IMS_ORG_ID>\' \\\n  -d \'{\n    "inputs": {\n      "href": "<SIGNED_GET_URL>",\n      "storage": "<storage>"\n    },\n    "outputs": [\n    {\n      "href": "<SIGNED_POST_URL>",\n      "type": "<type>",\n      "storage": "<storage>"\n    }\n  ]\n}\'\n')),(0,s.mdx)("p",null,"This initiates an asynchronous job and returns a request body containing the href to poll for job status."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "_links": {\n        "self": {\n            "href": "https://image.adobe.io/lrService/status/eb4a9211-eb8a-4e88-b853-b9c08ba47427"\n        }\n    }\n}\n')),(0,s.mdx)("h4",{id:"step-2-receive-the-jobs-status-on-the-webhook-application-when-the-job-is-complete"},"Step 2: Receive the Job's status on the Webhook application when the job is complete"),(0,s.mdx)("p",null,"The value in the key ",(0,s.mdx)("inlineCode",{parentName:"p"},"body")," inside the event JSON contains the result of the job. Here is a sample event received from the job initiated above:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "event_id": "7b59cc70-88d7-4895-b204-87f5350a0cce",\n  "event": {\n    "header": {\n      "msgType": "JOB_COMPLETION_STATUS",\n      "msgId": "eb4a9211-eb8a-4e88-b853-b9c08ba47427",\n      "imsOrgId": "<YOUR_IMS_ORG_ID>",\n      "eventCode": "lightroom-job-status",\n      "_pipelineMeta": {\n        "pipelineMessageId": "1586290300876:944289:VA7_A1:149:0"\n      },\n      "_smarts": {\n        "definitionId": "3ee6c9056a9d72fc40e09ddf5fdbb0af752e8e49",\n        "runningSmartId": "psmart-yw6wosjksniuuathenny"\n      },\n      "_adobeio": {\n        "imsOrgId": "<YOUR_IMS_ORG_ID>",\n        "providerMetadata": "di_event_code",\n        "eventCode": "lightroom-job-status"\n      }\n    },\n    "body": {\n      "jobId": "eb4a9211-eb8a-4e88-b853-b9c08ba47427",\n      "outputs": [\n        {\n          "input": "<SIGNED_GET_URL>",\n          "status": "succeeded",\n          "_links": {\n            "self": [\n              {\n                "href": "<SIGNED_POST_URL>",\n                "storage": "<storage>"\n              }\n            ]\n          }\n        }\n      ],\n      "_links": {\n        "self": {\n          "href": "https://image.adobe.io/lrService/status/eb4a9211-eb8a-4e88-b853-b9c08ba47427"\n        }\n      }\n    }\n  }\n}\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-lightroom-code-sample-index-md-e32a9be61537a48b0b8f.js.map