"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[4451],{88431:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return d},default:function(){return u}});var t=a(58168),o=a(80045),s=(a(88763),a(15680)),r=a(83407);const i=["components"],d={},p=(c="CodeBlock",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.mdx)("div",e)});var c;const l={_frontmatter:d},m=r.A;function u(e){let{components:n}=e,a=(0,o.A)(e,i);return(0,s.mdx)(m,(0,t.A)({},l,a,{components:n,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"quickstart-guide"},"Quickstart Guide"),(0,s.mdx)("p",null,"Automating Content Workflows with Firefly Services APIs"),(0,s.mdx)("table",null,(0,s.mdx)("thead",{parentName:"table"},(0,s.mdx)("tr",{parentName:"thead"},(0,s.mdx)("th",{parentName:"tr",align:null}),(0,s.mdx)("th",{parentName:"tr",align:null}))),(0,s.mdx)("tbody",{parentName:"table"},(0,s.mdx)("tr",{parentName:"tbody"},(0,s.mdx)("td",{parentName:"tr",align:null},(0,s.mdx)("span",{parentName:"td",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,s.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"75.625%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,s.mdx)("picture",{parentName:"span"},"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/5530d/original.webp 320w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/0c8fb/original.webp 640w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/94b1e/original.webp 1280w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/0b34d/original.webp 1920w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/d5269/original.webp 2560w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/238ba/original.webp 3874w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/8980b/original.jpg 320w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/56d4e/original.jpg 640w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/62aaf/original.jpg 1280w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/aaf92/original.jpg 1920w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/36eba/original.jpg 2560w","/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/d954d/original.jpg 3874w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/jpeg"}),"\n          ",(0,s.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/ff-services-docs/static/d7e2dfcd6c46cf96603bde8009be488d/62aaf/original.jpg",alt:"a picture of a burger with a black background",title:"a picture of a burger with a black background",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")," ",(0,s.mdx)("p",{style:{textAlign:"center"}},"Original Image")),(0,s.mdx)("td",{parentName:"tr",align:null},(0,s.mdx)("span",{parentName:"td",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,s.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"77.8125%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,s.mdx)("picture",{parentName:"span"},"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/5530d/output.webp 320w","/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/0c8fb/output.webp 640w","/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/94b1e/output.webp 1280w","/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/0b34d/output.webp 1920w","/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/4589a/output.webp 2304w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/8980b/output.jpg 320w","/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/56d4e/output.jpg 640w","/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/62aaf/output.jpg 1280w","/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/aaf92/output.jpg 1920w","/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/0e09b/output.jpg 2304w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/jpeg"}),"\n          ",(0,s.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/ff-services-docs/static/4f97b20fdb33f7225b50a06ad638fea7/62aaf/output.jpg",alt:"a picture of a burger with a fiery background and enhanced lighting",title:"a picture of a burger with a fiery background and enhanced lighting",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")," ",(0,s.mdx)("p",{style:{textAlign:"center"}},"Output Image"))))),(0,s.mdx)("h2",{id:"overview"},"Overview"),(0,s.mdx)("p",null,"In this tutorial, let's imagine we work at an innovative e-commerce company specializing in handcrafted home decor. Our mission is to create a captivating online catalog that showcases our unique products to customers worldwide. To achieve this, we need to process a large number of product images efficiently while maintaining high visual standards.We will leverage Adobe's Firefly Services APIs to automate our content workflow:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"Remove Backgrounds:")," Use the Photoshop API to eliminate distracting backgrounds from our product images, allowing the items to stand out."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"Enhance Images with Generative Fill:")," Apply the Firefly Fill Image API to add creative and contextually relevant backgrounds that enhance the aesthetic appeal of each product."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"Optimize Image Quality:")," Utilize the Lightroom Auto Tone API to automatically adjust lighting and color balance, ensuring consistent and professional-quality images across our catalog.")),(0,s.mdx)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.mdx)("p",null,"If you don't already have a Photoshop, Firefly, and Lightroom ",(0,s.mdx)("strong",{parentName:"p"},"Client ID")," and ",(0,s.mdx)("strong",{parentName:"p"},"Client Secret"),", retrieve them from your ",(0,s.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview"},"Adobe Developer Console project")," before reading further. ",(0,s.mdx)("strong",{parentName:"p"},"Securely store these credentials and never expose them in client-side or public code.")),(0,s.mdx)("p",null,"Pre-signed URLs:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"A pre-signed URL with a read token for the input assets."),(0,s.mdx)("li",{parentName:"ul"},"A pre-signed URL with a read/write token for the output assets.")),(0,s.mdx)("p",null,"For more details about pre-signed URLs, see ",(0,s.mdx)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html"},"AWS Sharing objects with presigned URLs"),", or ",(0,s.mdx)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/storage/common/storage-sas-overview"},"Azure Storage resources using shared access signatures"),"."),(0,s.mdx)("h2",{id:"retrieve-an-access-token"},"Retrieve an Access Token"),(0,s.mdx)("p",null,"Open a secure terminal and ",(0,s.mdx)("inlineCode",{parentName:"p"},"export")," your ",(0,s.mdx)("strong",{parentName:"p"},"Client ID")," and ",(0,s.mdx)("strong",{parentName:"p"},"Client Secret")," as environment variables so that your later commands can access them:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"export FIREFLY_SERVICES_CLIENT_ID=yourClientIdAsdf123\nexport FIREFLY_SERVICES_CLIENT_SECRET=yourClientSecretAsdf123\n")),(0,s.mdx)("p",null,"Generate an access token:"),(0,s.mdx)(p,{slots:"heading, code",repeat:"3",languages:"bash, Python, JavaScript",mdxType:"CodeBlock"}),(0,s.mdx)("h4",{id:"curl"},"cURL"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"curl --location 'https://ims-na1.adobelogin.com/ims/token/v3' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'grant_type=client_credentials' \\\n--data-urlencode \"client_id=$FIREFLY_SERVICES_CLIENT_ID\" \\\n--data-urlencode \"client_secret=$FIREFLY_SERVICES_CLIENT_SECRET\" \\\n--data-urlencode 'scope=openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n")),(0,s.mdx)("h4",{id:"python"},"Python"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},"def retrieve_access_token():\n    client_id = os.environ['FIREFLY_SERVICES_CLIENT_ID']\n    client_secret = os.environ['FIREFLY_SERVICES_CLIENT_SECRET']\n\n    token_url = 'https://ims-na1.adobelogin.com/ims/token/v3'\n    payload = {\n        'grant_type': 'client_credentials',\n        'client_id': client_id,\n        'client_secret': client_secret,\n        'scope': 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis'\n    }\n\n    response = requests.post(token_url, data=payload)\n    response.raise_for_status()\n    token_data = response.json()\n    print(\"Access Token Retrieved\")\n    return token_data['access_token']\n")),(0,s.mdx)("h4",{id:"javascript"},"JavaScript"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},"async function retrieveAccessToken() {\n  const data = qs.stringify({\n    grant_type: 'client_credentials',\n    client_id: process.env.FIREFLY_SERVICES_CLIENT_ID,\n    client_secret: process.env.FIREFLY_SERVICES_CLIENT_SECRET,\n    scope: 'openid,AdobeID,session,additional_info,read_organizations,firefly_api,ff_apis',\n  });\n\n  const config = {\n    method: 'post',\n    url: 'https://ims-na1.adobelogin.com/ims/token/v3',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Access Token Retrieved');\n    return response.data.access_token;\n  } catch (error) {\n    console.error('Error retrieving access token:', error.response.data);\n  }\n}\n")),(0,s.mdx)("p",null,"The response will look like this:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{"access_token":"yourAccessTokenAsdf123","token_type":"bearer","expires_in":86399}\n')),(0,s.mdx)("p",null,"Export this access token in your secure terminal so that the next script can conveniently access it:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"export FIREFLY_SERVICES_ACCESS_TOKEN=yourAccessTokenAsdf123\n")),(0,s.mdx)("h2",{id:"remove-background---photoshop-api"},"Remove Background - Photoshop API"),(0,s.mdx)("p",null,"Next, call the ",(0,s.mdx)("a",{parentName:"p",href:"../../photoshop/api/photoshop_removeBackground.md"},"Photoshop Remove Background API"),":"),(0,s.mdx)(p,{slots:"heading, code",repeat:"3",languages:"bash, Python, JavaScript",mdxType:"CodeBlock"}),(0,s.mdx)("h4",{id:"curl-1"},"cURL"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},'curl --location \'https://image.adobe.io/sensei/cutout\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Accept: application/json\' \\\n--header "x-api-key: $FIREFLY_SERVICES_CLIENT_ID" \\\n--header "Authorization: Bearer $FIREFLY_SERVICES_ACCESS_TOKEN" \\\n--data \'{\n    "input":{\n      "href":"https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...",\n      "storage":"azure"\n    },\n    "output":{\n      "href":"https://demo.blob.core.windows.net:443/container/output.jpeg?sv...&query=params...",\n      "storage":"azure"\n    }\n  }\'\n')),(0,s.mdx)("h4",{id:"python-1"},"Python"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},"# Replace with your actual pre-signed URLs and storage option\nSIGNED_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'\nSIGNED_POST_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'\nSTORAGE = 'azure'  # e.g., 'external', 'azure'\n\ndef remove_background(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['FIREFLY_SERVICES_CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'input': {\n            'href': SIGNED_GET_URL,\n            'storage': STORAGE\n        },\n        'output': {\n            'href': SIGNED_POST_URL,\n            'storage': STORAGE\n        }\n    }\n\n    response = requests.post('https://image.adobe.io/sensei/cutout', headers=headers, json=data)\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Remove Background Job Submitted:\", job_response)\n    return job_response\n")),(0,s.mdx)("h4",{id:"javascript-1"},"JavaScript"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},"const SIGNED_GET_URL = \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\";\nconst SIGNED_POST_URL = \"https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...\";\nconst STORAGE = \"azure\"; // e.g., 'external', 'azure'\n\nasync function removeBackground(accessToken) {\n  const headers = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-api-key': process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: `Bearer ${accessToken}`,\n  };\n\n  const data = {\n    input: { href: SIGNED_GET_URL, storage: STORAGE },\n    output: { href: SIGNED_POST_URL, storage: STORAGE },\n  };\n\n  const config = {\n    method: 'post',\n    url: 'https://image.adobe.io/sensei/cutout',\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    console.log('Remove Background Job Submitted:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error during removeBackground:', error.response.data);\n  }\n}\n")),(0,s.mdx)("p",null,"The response will look like this:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "_links": {\n    "self": {\n      "href": "https://image.adobe.io/sensei/status/<:jobId>"\n    }\n  }\n}\n')),(0,s.mdx)("p",null,"Wait for a success status of this job. A sample of this is provided in the ",(0,s.mdx)("a",{parentName:"p",href:"../../photoshop/quickstart/index.md#get-status---mask"},"Photoshop Quickstart Guide"),"."),(0,s.mdx)("h2",{id:"fill-image---firefly-api"},"Fill Image - Firefly API"),(0,s.mdx)("p",null,"Next, call the ",(0,s.mdx)("a",{parentName:"p",href:"../../firefly-api/guides/api/generative_fill/V3_Async/index.md"},"Firefly Fill Image API"),":"),(0,s.mdx)(p,{slots:"heading, code",repeat:"3",languages:"bash, Python, JavaScript",mdxType:"CodeBlock"}),(0,s.mdx)("h4",{id:"curl-2"},"cURL"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},'curl --location \'https://firefly-api.adobe.io/v3/images/fill-async\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Accept: application/json\' \\\n--header "x-api-key: $FIREFLY_SERVICES_CLIENT_ID" \\\n--header "Authorization: Bearer $FIREFLY_SERVICES_ACCESS_TOKEN" \\\n--data \'{\n    "prompt": "A delicious firey background",\n    "image": {\n        "source": {\n            "url": "https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...",\n        }\n    },\n    "mask": {\n        "source": {\n            "url": "https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...",\n        }\n    }\n}\'\n')),(0,s.mdx)("h4",{id:"python-2"},"Python"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},"# Replace with your actual pre-signed URLs\nSIGNED_IMAGE_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'  # Image URL\nSIGNED_MASK_GET_URL = 'https://your-storage-bucket-name.blob.core.windows.net:443/images/asdf-12345?lots=of&query=params...'    # Mask URL\n\ndef fill_image(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['FIREFLY_SERVICES_CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'prompt': 'a description of the desired background',  # Replace with your actual prompt\n        'image': {\n            'source': {\n                'url': SIGNED_IMAGE_GET_URL\n            }\n        },\n        'mask': {\n            'source': {\n                'url': SIGNED_MASK_GET_URL\n            }\n        }\n    }\n\n    response = requests.post(\n        'https://firefly-api.adobe.io/v3/images/fill-async',\n        headers=headers,\n        json=data\n    )\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Fill Image Job Submitted:\", job_response)\n    return job_response\n")),(0,s.mdx)("h4",{id:"javascript-2"},"JavaScript"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},'const SIGNED_IMAGE_GET_URL = \'https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...\'; // Replace with your image URL\nconst SIGNED_MASK_GET_URL = \'https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...\';  // Replace with your mask URL\n\nasync function fillImage(accessToken) {\n  const headers = {\n    "Content-Type": "application/json",\n    Accept: "application/json",\n    "x-api-key": process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: `Bearer ${accessToken}`,\n  };\n\n  const data = {\n    prompt: "A delicious firey background", // Replace with your actual prompt\n    image: {\n      source: {\n        url: SIGNED_IMAGE_GET_URL,\n      },\n    },\n    mask: {\n      source: {\n        url: SIGNED_MASK_GET_URL,\n      },\n    },\n  };\n\n  const config = {\n    method: "post",\n    url: "https://firefly-api.adobe.io/v3/images/fill-async",\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error("Error during fillImage:", error);\n  }\n}\n')),(0,s.mdx)("p",null,"The response will look like this:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "jobId": "urn:ff:jobs:eso851211:86ffe2ea-d765-4bd3-b2fd-1111",\n  "statusUrl": "https://firefly-api.adobe.io/v3/status/urn:ff:jobs:eso851211:86ffe2ea-d765-4bd3-b2fd-1111",\n  "cancelUrl": "https://firefly-api.adobe.io/v3/cancel/urn:ff:jobs:eso851211:86ffe2ea-d765-4bd3-b2fd-1111"\n}\n')),(0,s.mdx)("p",null,"Wait for a success status of this job. A sample of this is provided in the ",(0,s.mdx)("a",{parentName:"p",href:"../../firefly-api/guides/how-tos/using-async-apis.md#generating-images-with-the-async-api"},"Firefly API Tutorials"),"."),(0,s.mdx)("h2",{id:"auto-tone---lightroom-api"},"Auto Tone - Lightroom API"),(0,s.mdx)("p",null,"Next, call the ",(0,s.mdx)("a",{parentName:"p",href:"../../lightroom/api/lightroom_autoTone.md"},"Lightroom Auto Tone API"),":"),(0,s.mdx)(p,{slots:"heading, code",repeat:"3",languages:"bash, Python, JavaScript",mdxType:"CodeBlock"}),(0,s.mdx)("h4",{id:"curl-3"},"cURL"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},'curl --location \'https://image.adobe.io/lrService/autoTone\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Accept: application/json\' \\\n--header "x-api-key: $FIREFLY_SERVICES_CLIENT_ID" \\\n--header "Authorization: Bearer $FIREFLY_SERVICES_ACCESS_TOKEN" \\\n--data \'{\n    "inputs":{\n      "href":"https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...",\n      "storage":"azure"\n    },\n    "outputs":[{\n      "href":"https://demo.blob.core.windows.net:443/container/output.jpeg?sv...&query=params...",\n      "storage":"azure",\n      "type":"image/jpeg"\n    }]\n  }\'\n')),(0,s.mdx)("h4",{id:"python-3"},"Python"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},"# Replace with your actual pre-signed URLs and storage option\nSIGNED_GET_URL = 'https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...'\nSIGNED_POST_URL = 'https://demo.blob.core.windows.net:443/container/output.jpeg?sv...&query=params...'\nstorage = 'azure'  # e.g., 'external', 'azure'\n\ndef auto_tone(access_token):\n    headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'x-api-key': os.environ['FIREFLY_SERVICES_CLIENT_ID'],\n        'Authorization': f'Bearer {access_token}'\n    }\n\n    data = {\n        'inputs': {\n            'href': SIGNED_GET_URL,\n            'storage': STORAGE\n        },\n        'outputs': [{\n            'href': SIGNED_POST_URL,\n            'storage': STORAGE,\n            'type': 'image/jpeg'\n        }]\n    }\n\n    response = requests.post('https://image.adobe.io/lrService/autoTone', headers=headers, json=data)\n    response.raise_for_status()\n    job_response = response.json()\n    print(\"Auto Tone Job Submitted:\", job_response)\n    return job_response\n")),(0,s.mdx)("h4",{id:"javascript-3"},"JavaScript"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},' const SIGNED_GET_URL = "https://demo.blob.core.windows.net:443/container/input.jpeg?sv...&query=params...";\n  const SIGNED_POST_URL = "https://demo.blob.core.windows.net:443/container/output.jpeg?sv...&query=params...";\n  const STORAGE = "azure"; // e.g., \'external\', \'azure\'\n\nasync function autoTone(accessToken) {\n  const headers = {\n    "Content-Type": "application/json",\n    Accept: "application/json",\n    "x-api-key": process.env.FIREFLY_SERVICES_CLIENT_ID,\n    Authorization: `Bearer ${accessToken}`,\n  };\n\n  const data = {\n    inputs: {\n      href: SIGNED_GET_URL,\n      storage: storage,\n    },\n    outputs: [\n      {\n        href: SIGNED_POST_URL,\n        storage: storage,\n        type: "image/jpeg",\n      },\n    ],\n  };\n\n  const config = {\n    method: "post",\n    url: "https://image.adobe.io/lrService/autoTone",\n    headers: headers,\n    data: data,\n  };\n\n  try {\n    const response = await axios.request(config);\n    return response.data;\n  } catch (error) {\n    console.error("Error during autoTone:", error);\n  }\n}\n')),(0,s.mdx)("p",null,"The response will look like this:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "_links": {\n    "self": {\n      "href": "https://image.adobe.io/lrService/status/<:jobId>"\n    }\n  }\n}\n')),(0,s.mdx)("p",null,"Wait for a success status of this job. A sample of this is provided in the ",(0,s.mdx)("a",{parentName:"p",href:"../../lightroom/quickstart/index.md#get-status"},"Lightroom API Quickstart Guide"),"."),(0,s.mdx)("h2",{id:"view-final-image"},"View Final Image"),(0,s.mdx)("p",null,"Access the final at the ",(0,s.mdx)("inlineCode",{parentName:"p"},"outputs[0]._links.self.href")," URL (the ",(0,s.mdx)("inlineCode",{parentName:"p"},"SIGNED_POST_URL")," provided earlier). 🎉"))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-quickstart-index-md-b39c685e313d9d7b1ea1.js.map